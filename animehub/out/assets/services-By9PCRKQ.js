import{s as e}from"./ui-components-C5QItHIj.js";const t=new Map,a=(e,a)=>{t.set(e,{data:a,timestamp:Date.now()})};class r{static async getAnimeList(t=1,a=20,r){try{if(r?.search||r?.genre||r?.year||r?.status){const{data:i,error:s}=await e.rpc("search_anime_optimized",{search_term:r?.search||"",genre_filter:r?.genre||null,year_filter:r?.year||null,status_filter:r?.status||null,type_filter:null,rating_min:null,limit_count:a,offset_count:(t-1)*a});if(s)return this.getAnimeListFallback(t,a,r);const{count:n}=await e.from("anime").select("*",{count:"exact",head:!0}).modify(e=>{r?.genre&&e.contains("genres",[r.genre]),r?.year&&e.eq("year",r.year),r?.status&&e.eq("status",r.status),r?.search&&e.or(`title.ilike.%${r.search}%,description.ilike.%${r.search}%`)});return{data:i||[],total:n||0,page:t,totalPages:Math.ceil((n||0)/a)}}const i=(t-1)*a,s=i+a-1,{data:n,error:o,count:u}=await e.from("anime").select("*",{count:"exact"}).order("created_at",{ascending:!1}).range(i,s);if(o)throw o;return{data:n||[],total:u||0,page:t,totalPages:Math.ceil((u||0)/a)}}catch(i){const e=i instanceof Error?i.message:"Unknown error";throw new Error(`Failed to fetch anime list: ${e}`)}}static async getAnimeListFallback(t,a,r){let i=e.from("anime").select("*",{count:"exact"}).order("created_at",{ascending:!1});r?.genre&&(i=i.contains("genres",[r.genre])),r?.year&&(i=i.eq("year",r.year)),r?.status&&(i=i.eq("status",r.status)),r?.search&&(i=i.or(`title.ilike.%${r.search}%,description.ilike.%${r.search}%`));const s=(t-1)*a,n=s+a-1,{data:o,error:u,count:l}=await i.range(s,n);if(u)throw u;return{data:o||[],total:l||0,page:t,totalPages:Math.ceil((l||0)/a)}}static async getFeaturedAnime(r=5){try{const s=(i={limit:r},`${"featured_anime"}_${JSON.stringify(i)}`),n=(e=>{const a=t.get(e);return a&&Date.now()-a.timestamp<3e5?a.data:null})(s);if(n)return n;const{data:o,error:u}=await e.from("popular_anime").select("*").limit(r);if(u){const{data:t,error:i}=await e.from("anime").select("*").gte("rating",8).order("rating",{ascending:!1}).limit(r);if(i)throw new Error(`Failed to fetch featured anime: ${i.message}`);const n=t||[];return a(s,n),n}const l=o||[];return a(s,l),l}catch(s){return[]}var i}static async getTrendingAnime(t=10){try{const{data:a,error:r}=await e.from("anime").select("*").gte("rating",7).gte("created_at",new Date(Date.now()-2592e6).toISOString()).order("rating",{ascending:!1}).limit(t);if(r)throw new Error(`Failed to fetch trending anime: ${r.message}`);if(!a||a.length<t){const{data:r,error:i}=await e.from("anime").select("*").gte("rating",7.5).order("rating",{ascending:!1}).limit(t);return i?a||[]:r||[]}return a||[]}catch(a){return[]}}static async getPopularAnime(t=12){try{const{data:a,error:r}=await e.from("anime").select("*").gte("rating",7).order("rating",{ascending:!1}).limit(t);if(r)throw new Error(`Failed to fetch popular anime: ${r.message}`);return a||[]}catch(a){return[]}}static async getAnimeById(t,a){try{const{data:i,error:s}=await e.from("anime").select("\n          *,\n          episodes (*)\n        ").eq("id",t).single();if(s||!i)return null;const n=i.episodes?.sort((e,t)=>e.episode_number-t.episode_number)||[],o={...i,episodes:n};if(a)try{const r=n.map(e=>e.id),[i,s,u]=await Promise.all([r.length>0?e.from("user_progress").select("*").eq("user_id",a).in("episode_id",r):Promise.resolve({data:[]}),e.from("user_favorites").select("id").eq("user_id",a).eq("anime_id",t).maybeSingle(),e.from("user_watchlist").select("id").eq("user_id",a).eq("anime_id",t).maybeSingle()]);o.user_progress=i.data||[],o.is_favorited=!!s.data,o.is_in_watchlist=!!u.data}catch(r){o.user_progress=[],o.is_favorited=!1,o.is_in_watchlist=!1}return o}catch(i){return null}}static async createAnime(t){const{data:a,error:r}=await e.from("anime").insert(t).select().single();if(r)throw new Error(`Failed to create anime: ${r.message}`);return a}static async updateAnime(t,a){const{data:r,error:i}=await e.from("anime").update({...a,updated_at:(new Date).toISOString()}).eq("id",t).select().single();if(i)throw new Error(`Failed to update anime: ${i.message}`);return r}static async deleteAnime(t){const{error:a}=await e.from("anime").delete().eq("id",t);if(a)throw new Error(`Failed to delete anime: ${a.message}`);return!0}static async getGenres(){try{const{data:t,error:a}=await e.from("anime").select("genres");if(a)throw new Error(`Failed to fetch genres: ${a.message}`);const r=t?.flatMap(e=>e.genres||[])||[];return[...new Set(r)].sort()}catch(t){return[]}}static async searchAnime(t,a=20,r){try{let i=e.from("anime").select("*");switch(t&&t.trim()&&(i=i.or(`title.ilike.%${t}%,description.ilike.%${t}%,title_japanese.ilike.%${t}%`)),r?.genres&&r.genres.length>0&&(i=i.contains("genres",r.genres)),r?.year&&(i=i.eq("release_year",parseInt(r.year))),r?.status&&(i=i.eq("status",r.status)),r?.sortBy){case"rating":case"relevance":default:i=i.order("rating",{ascending:!1});break;case"year":i=i.order("release_year",{ascending:!1});break;case"title":i=i.order("title",{ascending:!0})}const{data:s,error:n}=await i.limit(a);if(n)throw new Error(`Failed to search anime: ${n.message}`);return s||[]}catch(i){return[]}}static async getSimilarAnime(t,a,r=6){try{if(!a||0===a.length)return[];const{data:i,error:s}=await e.from("anime").select("*").neq("id",t).overlaps("genres",a).order("rating",{ascending:!1}).limit(r);if(s)throw new Error(`Failed to get similar anime: ${s.message}`);return i||[]}catch(i){return[]}}}class i{static detectVideoSource(e){if(!e)return"unknown";const t=e.toLowerCase();return t.includes("youtube.com")||t.includes("youtu.be")?"youtube":t.includes("anikai.to")||t.includes("9anime")||t.includes("zoro.to")||t.includes("gogoanime")||t.includes("megaplay.buzz")||t.includes("megaplay")||t.includes("2anime.xyz")||t.includes("2m.2anime.xyz")||t.includes("hianime.do")||t.includes("crunchyroll.com")?"iframe":t.includes(".m3u8")||t.includes("hls")||t.includes("stream")||t.match(/\.m3u8(\?|$|#)/)?"hls":t.match(/\.(mp4|webm|avi|mkv|mov|flv)$/i)?"direct":"unknown"}static extractYouTubeId(e){const t=[/(?:youtube\.com\/watch\?v=|youtu\.be\/|youtube\.com\/embed\/|youtube\.com\/v\/)([^&\n?#]+)/,/youtube\.com\/watch\?.*v=([^&\n?#]+)/,/youtube\.com\/embed\/([^&\n?#]+)/];for(const a of t){const t=e.match(a);if(t&&t[1])return t[1]}return null}static getYouTubeEmbedUrl(e,t={}){const a=this.extractYouTubeId(e);if(!a)throw new Error("Invalid YouTube URL");const r=new URLSearchParams({autoplay:t.autoplay?"1":"0",controls:!1!==t.controls?"1":"0",rel:"0",modestbranding:"1",fs:"1",cc_load_policy:"0",iv_load_policy:"3",playsinline:"1"});return t.start&&r.set("start",t.start.toString()),t.quality&&r.set("vq",t.quality),`https://www.youtube.com/embed/${a}?${r.toString()}`}static getDirectVideoProxyUrl(e,t,a,r={}){const i=new URLSearchParams({url:e,animeId:t,episode:a.toString()});return r.quality&&i.set("quality",r.quality),r.start&&i.set("start",r.start.toString()),`/api/video-proxy?${i.toString()}`}static getIframeEmbedUrl(e,t={}){const a=new URL(e);return t.autoplay&&a.searchParams.set("autoplay","1"),t.start&&a.searchParams.set("t",t.start.toString()),a.toString()}static isStreamingSitePage(e){const t=e.toLowerCase();return t.includes("anikai.to/watch")||t.includes("9anime/watch")||t.includes("zoro.to/watch")||t.includes("gogoanime/watch")||t.includes("megaplay.buzz/watch")}static getExternalLinkFallback(e){return{url:e,type:"external"}}static processVideoSource(e,t,a,r={}){const i=this.detectVideoSource(e.url);let s,n;switch(i){case"youtube":s=this.getYouTubeEmbedUrl(e.url,{autoplay:r.autoplay,start:r.start,quality:r.quality}),n={title:`Episode ${a}`,quality:e.quality,thumbnail:`https://img.youtube.com/vi/${this.extractYouTubeId(e.url)}/maxresdefault.jpg`};break;case"iframe":this.isStreamingSitePage(e.url)?(s=e.url,n={title:`Episode ${a}`,quality:e.quality}):(s=this.getIframeEmbedUrl(e.url,{autoplay:r.autoplay,start:r.start,quality:r.quality}),n={title:`Episode ${a}`,quality:e.quality});break;case"direct":case"hls":s=this.getDirectVideoProxyUrl(e.url,t,a,{quality:r.quality,start:r.start}),n={title:`Episode ${a}`,quality:e.quality};break;default:s=e.url,n={title:`Episode ${a}`,quality:e.quality}}return{url:s,type:i,metadata:n}}static generateYouTubeQualities(e){return this.extractYouTubeId(e)?[{quality:"1080p",url:this.getYouTubeEmbedUrl(e,{quality:"hd1080"}),provider:"YouTube",type:"youtube",embedUrl:this.getYouTubeEmbedUrl(e,{quality:"hd1080"})},{quality:"720p",url:this.getYouTubeEmbedUrl(e,{quality:"hd720"}),provider:"YouTube",type:"youtube",embedUrl:this.getYouTubeEmbedUrl(e,{quality:"hd720"})},{quality:"480p",url:this.getYouTubeEmbedUrl(e,{quality:"medium"}),provider:"YouTube",type:"youtube",embedUrl:this.getYouTubeEmbedUrl(e,{quality:"medium"})},{quality:"360p",url:this.getYouTubeEmbedUrl(e,{quality:"small"}),provider:"YouTube",type:"youtube",embedUrl:this.getYouTubeEmbedUrl(e,{quality:"small"})}]:[]}static async validateVideoUrl(e,t){try{if("youtube"===t){return null!==this.extractYouTubeId(e)}return(await fetch(e,{method:"HEAD"})).ok}catch(a){return!1}}static getVideoThumbnail(e,t){if("youtube"===t){const t=this.extractYouTubeId(e);return t?`https://img.youtube.com/vi/${t}/maxresdefault.jpg`:""}return""}static parseVideoDuration(e){if("number"==typeof e)return e;const t=e.split(":").map(Number);return 3===t.length?3600*t[0]+60*t[1]+t[2]:2===t.length?60*t[0]+t[1]:t[0]||0}static formatDuration(e){const t=Math.floor(e/3600),a=Math.floor(e%3600/60),r=Math.floor(e%60);return t>0?`${t}:${a.toString().padStart(2,"0")}:${r.toString().padStart(2,"0")}`:`${a}:${r.toString().padStart(2,"0")}`}}export{r as A,i as V};
//# sourceMappingURL=services-By9PCRKQ.js.map
