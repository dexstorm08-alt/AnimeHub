{"version":3,"file":"page-DuxJullu.js","sources":["../../src/pages/player/page.tsx","../../src/hooks/useAnimePlayer.ts"],"sourcesContent":["\nimport { useState, useEffect, useMemo } from 'react';\nimport { useParams, Link, useSearchParams } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport Navbar from '../../components/feature/Navbar';\nimport AnimeCard from '../../components/feature/AnimeCard';\nimport Button from '../../components/base/Button';\nimport SmartVideoPlayer from '../../components/player/SmartVideoPlayer';\nimport { SparkleLoadingSpinner } from '../../components/base/LoadingSpinner';\nimport useAnimePlayer from '../../hooks/useAnimePlayer';\nimport { useAnimeById, useSimilarAnime } from '../../hooks/useAnime';\nimport { useAuthContext } from '../../contexts/AuthContext';\nimport type { VideoSource } from '../../services/videoService';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport { VideoPlayerError } from '../../components/ErrorFallbacks';\n\nexport default function PlayerPage() {\n  const { animeId, episode } = useParams<{ animeId: string; episode: string }>();\n  const [searchParams] = useSearchParams();\n  const { user } = useAuthContext();\n  \n  const currentEpisode = parseInt(episode || '1');\n  const [sources, setSources] = useState<VideoSource[]>([]);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [initialTime, setInitialTime] = useState(0);\n\n  const { getEpisodeSources, updateWatchProgress, getWatchProgress } = useAnimePlayer();\n  const { anime, loading: animeLoading } = useAnimeById(animeId || '', user?.id);\n  \n  // Memoize genres to prevent infinite loops\n  const memoizedGenres = useMemo(() => anime?.genres || [], [anime?.genres?.join(',')]);\n  \n  const { anime: similarAnime, loading: similarLoading } = useSimilarAnime(\n    animeId || '', \n    memoizedGenres, \n    6\n  );\n\n  // Handle player events\n  const handleTimeUpdate = (currentTime: number, _duration: number) => {\n    setCurrentTime(currentTime);\n  };\n\n  const handlePlay = () => {\n    console.log('Video started playing');\n  };\n\n  const handlePause = () => {\n    console.log('Video paused');\n  };\n\n  const handleEnded = () => {\n    console.log('Video ended');\n  };\n\n  const handleError = (error: string) => {\n    console.error('Video player error:', error);\n  };\n\n  // Handle progress restoration from URL params or saved progress\n  useEffect(() => {\n    const restoreProgress = async () => {\n      if (!animeId || !episode) return;\n\n      // Check for progress in URL params (from continue watching)\n      const progressParam = searchParams.get('progress');\n      if (progressParam) {\n        const progressSeconds = parseInt(progressParam);\n        if (!isNaN(progressSeconds) && progressSeconds > 0) {\n          setInitialTime(progressSeconds);\n          return;\n        }\n      }\n\n      // Check if this is a \"continue watching\" request (has continue=true param)\n      const isContinueWatching = searchParams.get('continue') === 'true';\n      \n      if (isContinueWatching) {\n        // For continue watching, get saved progress from database/localStorage\n        try {\n          const savedProgress = await getWatchProgress(animeId, parseInt(episode));\n          if (savedProgress > 0) {\n            setInitialTime(savedProgress);\n          }\n        } catch (error) {\n          console.warn('Failed to get saved progress:', error);\n        }\n      } else {\n        // For direct episode clicks, start from beginning\n        setInitialTime(0);\n      }\n    };\n\n    restoreProgress();\n  }, [animeId, episode, searchParams, getWatchProgress]);\n\n  useEffect(() => {\n    const fetchVideoSources = async () => {\n      if (!animeId || !episode) return;\n      \n      console.log('Fetching video sources for:', animeId, 'episode:', episode);\n      \n      try {\n        const episodeData = await getEpisodeSources(animeId, parseInt(episode));\n        setSources(episodeData.sources);\n        console.log('Video sources loaded:', episodeData.sources);\n      } catch (err) {\n        console.error('Error fetching video sources:', err);\n      }\n    };\n\n    fetchVideoSources();\n\n    // Save progress periodically\n    const progressInterval = setInterval(() => {\n      if (currentTime > 0 && animeId && episode) {\n        updateWatchProgress(animeId, parseInt(episode), Math.floor(currentTime))\n          .catch(console.error);\n      }\n    }, 30000); // Save every 30 seconds\n\n    return () => {\n      clearInterval(progressInterval);\n    };\n  }, [animeId, episode, getEpisodeSources, updateWatchProgress, currentTime]);\n\n  // Generate episodes for navigation with fallback\n  const episodes = useMemo(() => {\n    if (!anime) return [];\n    \n    if (anime.episodes && anime.episodes.length > 0) {\n      return anime.episodes.map((ep: any, index: number) => {\n        // Ensure we have a valid episode object\n        if (!ep || typeof ep !== 'object') {\n          return {\n            number: index + 1,\n            title: `Episode ${index + 1}`\n          };\n        }\n        \n        return {\n          number: ep.episode_number || ep.number || (index + 1),\n          title: ep.title || `Episode ${ep.episode_number || ep.number || (index + 1)}`\n        };\n      });\n    }\n    \n    // Fallback: generate episodes based on total_episodes\n    const totalEpisodes = anime.total_episodes || 1;\n    return Array.from({ length: totalEpisodes }, (_, i) => ({\n      number: i + 1,\n      title: `Episode ${i + 1}`\n    }));\n  }, [anime]);\n\n\n\n\n\n  if (animeLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-yellow-50 to-pink-50\">\n        <Navbar />\n        <div className=\"flex items-center justify-center min-h-[60vh]\">\n          <div className=\"text-center\">\n            <SparkleLoadingSpinner size=\"xl\" text=\"Loading anime...\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!anime) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-yellow-50 to-pink-50\">\n        <Navbar />\n        <div className=\"flex items-center justify-center min-h-[60vh]\">\n          <div className=\"text-center\">\n            <div className=\"bg-white/95 backdrop-blur-sm rounded-2xl shadow-xl p-16 max-w-md mx-auto border border-white/50\">\n              <i className=\"ri-error-warning-line text-7xl text-teal-300 mb-6\"></i>\n              <h2 className=\"text-2xl font-bold text-teal-800 mb-4\">Anime not found</h2>\n              <Link to=\"/anime\">\n                <Button size=\"lg\">Browse Anime</Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-yellow-50 to-pink-50\">\n      <Navbar />\n      \n      <main className=\"w-full px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Breadcrumb Navigation */}\n          <motion.nav\n            initial={{ opacity: 0, y: -10 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"mb-8\"\n          >\n            <div className=\"flex items-center space-x-3 text-sm text-teal-600\">\n              <Link to=\"/\" className=\"hover:text-teal-700 transition-colors duration-200 cursor-pointer\">\n                <i className=\"ri-home-line mr-1\"></i>\n                Home\n              </Link>\n              <i className=\"ri-arrow-right-s-line text-teal-500\"></i>\n              <Link to=\"/anime\" className=\"hover:text-teal-700 transition-colors duration-200 cursor-pointer\">\n                Anime\n              </Link>\n              <i className=\"ri-arrow-right-s-line text-teal-500\"></i>\n              <Link to={`/anime/${animeId}`} className=\"hover:text-teal-700 transition-colors duration-200 cursor-pointer\">\n                {anime.title}\n              </Link>\n              <i className=\"ri-arrow-right-s-line text-teal-500\"></i>\n              <span className=\"text-teal-700 font-medium\">Episode {currentEpisode}</span>\n            </div>\n          </motion.nav>\n\n          {/* Video Player */}\n          <ErrorBoundary fallback={<VideoPlayerError title=\"Video Player Error\" message=\"The video player encountered an error. This might be due to network issues or an unsupported video format.\" />}>\n            <motion.div\n              key={`${animeId}-${currentEpisode}`}\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8 }}\n              className=\"relative bg-black rounded-2xl overflow-hidden shadow-2xl aspect-video mb-12\"\n            >\n              <SmartVideoPlayer\n                key={`${animeId}-${currentEpisode}`}\n                sources={sources}\n                animeId={animeId!}\n                episodeNumber={currentEpisode}\n                title={`${anime.title} - Episode ${currentEpisode}`}\n                onTimeUpdate={handleTimeUpdate}\n                onPlay={handlePlay}\n                onPause={handlePause}\n                onEnded={handleEnded}\n                onError={handleError}\n                autoPlay={true}\n                startTime={initialTime}\n                className=\"w-full h-full\"\n              />\n            </motion.div>\n          </ErrorBoundary>\n\n          {/* Episode List */}\n          <motion.section\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.3 }}\n            className=\"mb-12\"\n          >\n            <h2 className=\"text-2xl md:text-3xl font-bold text-teal-800 mb-8 flex items-center\">\n              <i className=\"ri-play-list-line mr-3 text-green-600\"></i>\n              Episodes\n            </h2>\n            \n            <div className=\"bg-white/95 backdrop-blur-sm rounded-2xl shadow-xl p-8 border border-white/50\">\n              <div className=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-6 lg:grid-cols-8 xl:grid-cols-10 gap-3\">\n                {episodes.length === 0 ? (\n                  <div className=\"col-span-full text-center py-8\">\n                    <p className=\"text-teal-600\">No episodes available</p>\n                  </div>\n                ) : (\n                  episodes.map((ep: any) => {\n                    // Safety check to ensure ep is a valid object with required properties\n                    if (!ep || typeof ep !== 'object' || !ep.number || !ep.title) {\n                      console.warn('Invalid episode object:', ep);\n                      return null;\n                    }\n                    \n                    return (\n                      <Link\n                        key={ep.number}\n                        to={`/player/${animeId}/${ep.number}`}\n                        className={`block p-3 rounded-lg transition-all duration-200 cursor-pointer text-center ${\n                          ep.number === currentEpisode\n                            ? 'bg-teal-600 text-white shadow-lg transform scale-105'\n                            : 'bg-teal-50 text-teal-800 hover:bg-teal-100 hover:shadow-md border border-teal-200 hover:transform hover:scale-105'\n                        }`}\n                      >\n                        <div className=\"flex flex-col items-center justify-center\">\n                          <div className={`w-10 h-10 rounded-full flex items-center justify-center mb-2 ${\n                            ep.number === currentEpisode\n                              ? 'bg-white/20'\n                              : 'bg-teal-100'\n                          }`}>\n                            <i className={`ri-play-fill text-sm ${\n                              ep.number === currentEpisode\n                                ? 'text-white'\n                                : 'text-teal-600'\n                            }`}></i>\n                          </div>\n                          <p className=\"text-xs font-semibold truncate w-full\">{ep.number}</p>\n                        </div>\n                      </Link>\n                    );\n                  }).filter(Boolean)\n                )}\n              </div>\n            </div>\n          </motion.section>\n\n          {/* Anime Info */}\n          <motion.section\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.5 }}\n            className=\"mb-12\"\n          >\n            <div className=\"bg-white/95 backdrop-blur-sm rounded-2xl shadow-xl p-8 border border-white/50\">\n              <div className=\"flex items-start space-x-8\">\n                <img\n                  src={anime.poster_url || `https://readdy.ai/api/search-image?query=Anime%20poster%20${anime.title}%2C%20Studio%20Ghibli%20style%2C%20beautiful%20artwork%2C%20detailed%20illustration&width=300&height=450&seq=player-poster&orientation=portrait`}\n                  alt={anime.title}\n                  className=\"w-32 h-44 object-cover object-top rounded-xl flex-shrink-0\"\n                  onError={(e) => {\n                    const target = e.target as HTMLImageElement;\n                    target.src = `https://readdy.ai/api/search-image?query=Anime%20poster%20${anime.title}%2C%20Studio%20Ghibli%20style%2C%20beautiful%20artwork%2C%20detailed%20illustration&width=300&height=450&seq=player-poster-fallback&orientation=portrait`;\n                  }}\n                />\n                <div className=\"flex-1\">\n                  <h3 className=\"text-2xl md:text-3xl font-bold text-teal-800 mb-4\">{anime.title}</h3>\n                  <div className=\"flex flex-wrap gap-3 mb-4\">\n                    {anime.genres?.map((genre: string) => (\n                      <span\n                        key={genre}\n                        className=\"px-3 py-2 bg-pink-200 text-teal-800 text-sm rounded-full font-medium\"\n                      >\n                        {genre}\n                      </span>\n                    ))}\n                  </div>\n                  <div className=\"flex items-center gap-6 text-sm text-teal-600 mb-4\">\n                    <span className=\"flex items-center gap-2\">\n                      <i className=\"ri-star-fill text-yellow-500\"></i>\n                      <span className=\"font-semibold\">{anime.rating || 'N/A'}</span>\n                    </span>\n                    <span className=\"font-medium\">{anime.release_year}</span>\n                    <span className=\"font-medium\">{anime.total_episodes || anime.episodes?.length || 0} episodes</span>\n                  </div>\n                  <p className=\"text-teal-700 leading-relaxed text-lg\">\n                    {anime.description || `Experience the magical world of ${anime.title}, a captivating story that will transport you to enchanting realms filled with wonder and adventure.`}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </motion.section>\n\n          {/* Similar Anime */}\n          <motion.section\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.7 }}\n            className=\"mb-12\"\n          >\n            <h2 className=\"text-2xl md:text-3xl font-bold text-teal-800 mb-8 flex items-center\">\n              <i className=\"ri-heart-line mr-3 text-pink-500\"></i>\n              Similar Anime\n            </h2>\n            \n            <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-4 md:gap-6\">\n              {similarLoading ? (\n                Array.from({ length: 6 }).map((_, index) => (\n                  <div key={index} className=\"bg-white/80 rounded-xl p-4 animate-pulse border border-white/20\">\n                    <div className=\"aspect-[3/4] bg-teal-100 rounded-lg mb-3\"></div>\n                    <div className=\"h-4 bg-teal-200 rounded mb-2\"></div>\n                    <div className=\"h-3 bg-teal-200 rounded w-2/3\"></div>\n                  </div>\n                ))\n              ) : similarAnime.length > 0 ? (\n                similarAnime.map((similarAnimeItem: any, index: number) => {\n                  // Map database anime structure to AnimeCard expected structure\n                  const mappedAnime = {\n                    _id: similarAnimeItem.id,\n                    title: similarAnimeItem.title,\n                    cover: similarAnimeItem.poster_url || \"https://readdy.ai/api/search-image?query=Anime%20poster%2C%20default%20anime%20image&width=300&height=400&seq=anime-poster&orientation=portrait\",\n                    banner: similarAnimeItem.banner_url,\n                    rating: similarAnimeItem.rating || 0,\n                    year: similarAnimeItem.year || new Date().getFullYear(),\n                    totalEpisodes: similarAnimeItem.total_episodes || 1,\n                    currentEpisode: 0,\n                    genres: similarAnimeItem.genres || [],\n                    status: similarAnimeItem.status === 'ongoing' ? 'Ongoing' : \n                            similarAnimeItem.status === 'completed' ? 'Completed' : \n                            similarAnimeItem.status === 'upcoming' ? 'Upcoming' : 'Ongoing' as 'Ongoing' | 'Completed' | 'Upcoming',\n                    description: similarAnimeItem.description || '',\n                    type: similarAnimeItem.type === 'tv' ? 'TV' :\n                          similarAnimeItem.type === 'movie' ? 'Movie' :\n                          similarAnimeItem.type === 'ova' ? 'OVA' :\n                          similarAnimeItem.type === 'special' ? 'Special' : 'TV' as 'TV' | 'Movie' | 'OVA' | 'ONA' | 'Special',\n                    studios: similarAnimeItem.studios || [],\n                    popularity: 0,\n                    views: 0\n                  };\n                  \n                  return (\n                    <motion.div\n                      key={similarAnimeItem.id}\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.5, delay: 0.1 * index }}\n                    >\n                      <AnimeCard {...mappedAnime} />\n                    </motion.div>\n                  );\n                })\n              ) : (\n                <div className=\"col-span-full text-center py-8\">\n                  <div className=\"bg-white/95 backdrop-blur-sm rounded-xl p-8 border border-white/50\">\n                    <i className=\"ri-movie-2-line text-4xl text-teal-400 mb-4\"></i>\n                    <h4 className=\"text-teal-800 font-semibold mb-2\">No Similar Anime Found</h4>\n                    <p className=\"text-teal-600 text-sm mb-4\">\n                      We couldn't find anime with similar genres\n                    </p>\n                    <Link\n                      to=\"/anime\"\n                      className=\"inline-block px-6 py-2 bg-teal-600 text-white rounded-lg hover:bg-teal-700 transition-colors cursor-pointer\"\n                    >\n                      Browse All Anime\n                    </Link>\n                  </div>\n                </div>\n              )}\n            </div>\n          </motion.section>\n        </div>\n      </main>\n\n      {/* Footer */}\n      <footer className=\"bg-teal-800 text-white py-16 mt-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            <div>\n              <h3 className=\"text-xl font-bold mb-4\" style={{ fontFamily: '\"Pacifico\", serif' }}>\n                AnimeStream\n              </h3>\n              <p className=\"text-teal-200 leading-relaxed\">\n                Your magical gateway to the world of anime. Discover, watch, and fall in love with stories that inspire.\n              </p>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Browse</h4>\n              <ul className=\"space-y-3 text-teal-200\">\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">Popular</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">Trending</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">New Releases</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">Top Rated</a></li>\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Genres</h4>\n              <ul className=\"space-y-3 text-teal-200\">\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">Action</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">Romance</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">Fantasy</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">Comedy</a></li>\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Connect</h4>\n              <div className=\"flex space-x-4\">\n                <a href=\"#\" className=\"text-teal-200 hover:text-white transition-colors duration-200 cursor-pointer\">\n                  <i className=\"ri-twitter-fill text-xl\"></i>\n                </a>\n                <a href=\"#\" className=\"text-teal-200 hover:text-white transition-colors duration-200 cursor-pointer\">\n                  <i className=\"ri-facebook-fill text-xl\"></i>\n                </a>\n                <a href=\"#\" className=\"text-teal-200 hover:text-white transition-colors duration-200 cursor-pointer\">\n                  <i className=\"ri-instagram-fill text-xl\"></i>\n                </a>\n                <a href=\"#\" className=\"text-teal-200 hover:text-white transition-colors duration-200 cursor-pointer\">\n                  <i className=\"ri-discord-fill text-xl\"></i>\n                </a>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"border-t border-teal-700 mt-12 pt-8 text-center text-teal-200\">\n            <p>&copy; 2024 AnimeStream. All rights reserved. | \n              <a href=\"https://readdy.ai/?origin=logo\" className=\"hover:text-white transition-colors duration-200 ml-1 cursor-pointer\">\n                Powered by Readdy\n              </a>\n            </p>\n          </div>\n        </div>\n      </footer>\n\n    </div>\n  );\n}\n","import { useCallback } from 'react';\r\nimport { VideoService, VideoSource } from '../services/videoService';\r\nimport { AnimeService } from '../services/animeService';\r\nimport { supabase } from '../lib/supabase';\r\n\r\ninterface AnimeEpisode {\r\n  number: number;\r\n  sources: VideoSource[];\r\n  title: string;\r\n}\r\n\r\ninterface WatchProgress {\r\n  animeId: string;\r\n  episodeNumber: number;\r\n  timestamp: number;\r\n}\r\n\r\nexport const useAnimePlayer = () => {\r\n\r\n  const getEpisodeSources = useCallback(async (animeId: string, episodeNumber: number): Promise<AnimeEpisode> => {\r\n    try {\r\n      // Get episode data from database\r\n      const { data: episode, error } = await supabase\r\n        .from('episodes')\r\n        .select('*')\r\n        .eq('anime_id', animeId)\r\n        .eq('episode_number', episodeNumber)\r\n        .single();\r\n\r\n      if (error || !episode) {\r\n        throw new Error('Episode not found');\r\n      }\r\n\r\n      // Generate video sources based on the video URL\r\n      const videoUrl = episode.video_url;\r\n      if (!videoUrl) {\r\n        throw new Error('No video URL available for this episode');\r\n      }\r\n\r\n      const sourceType = VideoService.detectVideoSource(videoUrl);\r\n      let sources: VideoSource[] = [];\r\n\r\n      if (sourceType === 'youtube') {\r\n        // Generate multiple quality options for YouTube\r\n        sources = VideoService.generateYouTubeQualities(videoUrl);\r\n      } else {\r\n        // For direct sources, create a single source entry\r\n        sources = [{\r\n          quality: '720p',\r\n          url: videoUrl,\r\n          provider: 'Direct',\r\n          type: sourceType,\r\n        }];\r\n      }\r\n\r\n      return {\r\n        number: episodeNumber,\r\n        sources,\r\n        title: episode.title || `Episode ${episodeNumber}`\r\n      };\r\n    } catch (error) {\r\n      console.error('Error fetching episode sources:', error);\r\n      throw new Error('Failed to fetch episode sources');\r\n    }\r\n  }, []);\r\n\r\n  const updateWatchProgress = useCallback(async (animeId: string, episodeNumber: number, timestamp: number): Promise<void> => {\r\n    try {\r\n      // Get current user\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      \r\n      // Always save to localStorage as backup\r\n      const key = `watch_progress_${animeId}_${episodeNumber}`;\r\n      localStorage.setItem(key, timestamp.toString());\r\n      \r\n      if (!user) {\r\n        return; // For non-authenticated users, only use localStorage\r\n      }\r\n\r\n      // Get episode ID\r\n      const { data: episode, error: episodeError } = await supabase\r\n        .from('episodes')\r\n        .select('id')\r\n        .eq('anime_id', animeId)\r\n        .eq('episode_number', episodeNumber)\r\n        .single();\r\n\r\n      if (episodeError || !episode) {\r\n        console.warn('Episode not found for progress update:', episodeError);\r\n        return; // localStorage backup is already saved\r\n      }\r\n\r\n      // Update or insert watch progress\r\n      const { error } = await supabase\r\n        .from('user_progress')\r\n        .upsert({\r\n          user_id: user.id,\r\n          episode_id: episode.id,\r\n          progress_seconds: timestamp,\r\n          is_completed: false,\r\n          last_watched: new Date().toISOString()\r\n        });\r\n\r\n      if (error) {\r\n        console.warn('Error updating watch progress in database:', error);\r\n        // Don't throw error - localStorage backup is already saved\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating watch progress:', error);\r\n      // Don't throw error for progress updates - they're not critical\r\n    }\r\n  }, []);\r\n\r\n  const getWatchProgress = useCallback(async (animeId: string, episodeNumber: number): Promise<number> => {\r\n    try {\r\n      // Get current user\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        // Check localStorage for non-authenticated users\r\n        const key = `watch_progress_${animeId}_${episodeNumber}`;\r\n        const saved = localStorage.getItem(key);\r\n        return saved ? parseInt(saved) : 0;\r\n      }\r\n\r\n      // Get episode ID\r\n      const { data: episode, error: episodeError } = await supabase\r\n        .from('episodes')\r\n        .select('id')\r\n        .eq('anime_id', animeId)\r\n        .eq('episode_number', episodeNumber)\r\n        .single();\r\n\r\n      if (episodeError || !episode) {\r\n        console.warn('Episode not found, using localStorage fallback:', episodeError);\r\n        const key = `watch_progress_${animeId}_${episodeNumber}`;\r\n        const saved = localStorage.getItem(key);\r\n        return saved ? parseInt(saved) : 0;\r\n      }\r\n\r\n      // Get watch progress from database with better error handling\r\n      const { data: progress, error: progressError } = await supabase\r\n        .from('user_progress')\r\n        .select('progress_seconds')\r\n        .eq('user_id', user.id)\r\n        .eq('episode_id', episode.id)\r\n        .maybeSingle(); // Use maybeSingle instead of single to handle no results gracefully\r\n\r\n      if (progressError) {\r\n        console.warn('Error fetching watch progress from database, using localStorage fallback:', progressError);\r\n        const key = `watch_progress_${animeId}_${episodeNumber}`;\r\n        const saved = localStorage.getItem(key);\r\n        return saved ? parseInt(saved) : 0;\r\n      }\r\n\r\n      return progress?.progress_seconds || 0;\r\n    } catch (error) {\r\n      console.error('Unexpected error fetching watch progress:', error);\r\n      // Fallback to localStorage\r\n      const key = `watch_progress_${animeId}_${episodeNumber}`;\r\n      const saved = localStorage.getItem(key);\r\n      return saved ? parseInt(saved) : 0;\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    getEpisodeSources,\r\n    updateWatchProgress,\r\n    getWatchProgress\r\n  };\r\n};\r\n\r\nexport default useAnimePlayer;"],"names":["PlayerPage","animeId","episode","useParams","searchParams","useSearchParams","user","useAuthContext","currentEpisode","parseInt","sources","setSources","useState","currentTime","setCurrentTime","initialTime","setInitialTime","getEpisodeSources","updateWatchProgress","getWatchProgress","useCallback","async","episodeNumber","data","error","supabase","from","select","eq","single","Error","videoUrl","video_url","sourceType","VideoService","detectVideoSource","generateYouTubeQualities","quality","url","provider","type","number","title","timestamp","auth","getUser","key","localStorage","setItem","toString","episodeError","upsert","user_id","id","episode_id","progress_seconds","is_completed","last_watched","Date","toISOString","saved","getItem","progress","progressError","maybeSingle","anime","loading","animeLoading","useAnimeById","memoizedGenres","useMemo","genres","join","similarAnime","similarLoading","useSimilarAnime","useEffect","progressParam","get","progressSeconds","isNaN","savedProgress","restoreProgress","episodeData","err","fetchVideoSources","progressInterval","setInterval","Math","floor","catch","console","clearInterval","episodes","length","map","ep","index","episode_number","totalEpisodes","total_episodes","Array","_","i","jsxs","className","children","jsx","Navbar","SparkleLoadingSpinner","size","text","motion","nav","initial","opacity","y","animate","Link","to","ErrorBoundary","fallback","VideoPlayerError","message","div","transition","duration","SmartVideoPlayer","onTimeUpdate","_duration","onPlay","onPause","onEnded","onError","autoPlay","startTime","section","delay","filter","Boolean","src","poster_url","alt","e","target","genre","rating","release_year","description","similarAnimeItem","mappedAnime","_id","cover","banner","banner_url","year","getFullYear","status","studios","popularity","views","AnimeCard","style","fontFamily","href","Button"],"mappings":"qcAgBA,SAAwBA,IACtB,MAAMC,QAAEA,EAAAC,QAASA,GAAYC,KACtBC,GAAgBC,KACjBC,KAAEA,GAASC,IAEXC,EAAiBC,SAASP,GAAW,MACpCQ,EAASC,GAAcC,EAAAA,SAAwB,KAC/CC,EAAaC,GAAkBF,EAAAA,SAAS,IACxCG,EAAaC,GAAkBJ,EAAAA,SAAS,IAEzCK,kBAAEA,EAAAC,oBAAmBA,EAAAC,iBAAqBA,GC0IzC,CACLF,kBAlJwBG,EAAAA,YAAYC,MAAOpB,EAAiBqB,KAC5D,IAEE,MAAQC,KAAMrB,EAAAsB,MAASA,SAAgBC,EACpCC,KAAK,YACLC,OAAO,KACPC,GAAG,WAAY3B,GACf2B,GAAG,iBAAkBN,GACrBO,SAEH,GAAIL,IAAUtB,EACZ,MAAM,IAAI4B,MAAM,qBAIlB,MAAMC,EAAW7B,EAAQ8B,UACzB,IAAKD,EACH,MAAM,IAAID,MAAM,2CAGlB,MAAMG,EAAaC,EAAaC,kBAAkBJ,GAClD,IAAIrB,EAAyB,GAe7B,OAXEA,EAFiB,YAAfuB,EAEQC,EAAaE,yBAAyBL,GAGtC,CAAC,CACTM,QAAS,OACTC,IAAKP,EACLQ,SAAU,SACVC,KAAMP,IAIH,CACLQ,OAAQnB,EACRZ,UACAgC,MAAOxC,EAAQwC,OAAS,WAAWpB,IAEvC,OAASE,GAEP,MAAM,IAAIM,MAAM,kCAClB,GACC,IAsGDZ,oBApG0BE,EAAAA,YAAYC,MAAOpB,EAAiBqB,EAAuBqB,KACrF,IAEE,MAAQpB,MAAMjB,KAAEA,UAAiBmB,EAASmB,KAAKC,UAGzCC,EAAM,kBAAkB7C,KAAWqB,IAGzC,GAFAyB,aAAaC,QAAQF,EAAKH,EAAUM,aAE/B3C,EACH,OAIF,MAAQiB,KAAMrB,EAASsB,MAAO0B,SAAuBzB,EAClDC,KAAK,YACLC,OAAO,MACPC,GAAG,WAAY3B,GACf2B,GAAG,iBAAkBN,GACrBO,SAEH,GAAIqB,IAAiBhD,EAEnB,OAIF,MAAMsB,MAAEA,SAAgBC,EACrBC,KAAK,iBACLyB,OAAO,CACNC,QAAS9C,EAAK+C,GACdC,WAAYpD,EAAQmD,GACpBE,iBAAkBZ,EAClBa,cAAc,EACdC,cAAA,IAAkBC,MAAOC,eAO/B,OAASnC,GAGT,GACC,IAwDDL,iBAtDuBC,EAAAA,YAAYC,MAAOpB,EAAiBqB,KAC3D,IAEE,MAAQC,MAAMjB,KAAEA,UAAiBmB,EAASmB,KAAKC,UAC/C,IAAKvC,EAAM,CAET,MAAMwC,EAAM,kBAAkB7C,KAAWqB,IACnCsC,EAAQb,aAAac,QAAQf,GACnC,OAAOc,EAAQnD,SAASmD,GAAS,CACnC,CAGA,MAAQrC,KAAMrB,EAASsB,MAAO0B,SAAuBzB,EAClDC,KAAK,YACLC,OAAO,MACPC,GAAG,WAAY3B,GACf2B,GAAG,iBAAkBN,GACrBO,SAEH,GAAIqB,IAAiBhD,EAAS,CAE5B,MAAM4C,EAAM,kBAAkB7C,KAAWqB,IACnCsC,EAAQb,aAAac,QAAQf,GACnC,OAAOc,EAAQnD,SAASmD,GAAS,CACnC,CAGA,MAAQrC,KAAMuC,EAAUtC,MAAOuC,SAAwBtC,EACpDC,KAAK,iBACLC,OAAO,oBACPC,GAAG,UAAWtB,EAAK+C,IACnBzB,GAAG,aAAc1B,EAAQmD,IACzBW,cAEH,GAAID,EAAe,CAEjB,MAAMjB,EAAM,kBAAkB7C,KAAWqB,IACnCsC,EAAQb,aAAac,QAAQf,GACnC,OAAOc,EAAQnD,SAASmD,GAAS,CACnC,CAEA,OAAOE,GAAUP,kBAAoB,CACvC,OAAS/B,GAGP,MAAMsB,EAAM,kBAAkB7C,KAAWqB,IACnCsC,EAAQb,aAAac,QAAQf,GACnC,OAAOc,EAAQnD,SAASmD,GAAS,CACnC,GACC,MDvIGK,MAAEA,EAAOC,QAASC,GAAiBC,EAAanE,GAAW,GAAIK,GAAM+C,IAGrEgB,EAAiBC,EAAAA,QAAQ,IAAML,GAAOM,QAAU,GAAI,CAACN,GAAOM,QAAQC,KAAK,QAEvEP,MAAOQ,EAAcP,QAASQ,GAAmBC,EACvD1E,GAAW,GACXoE,EACA,GAyBFO,EAAAA,UAAU,KACgBvD,WACtB,IAAKpB,IAAYC,EAAS,OAG1B,MAAM2E,EAAgBzE,EAAa0E,IAAI,YACvC,GAAID,EAAe,CACjB,MAAME,EAAkBtE,SAASoE,GACjC,IAAKG,MAAMD,IAAoBA,EAAkB,EAE/C,YADA/D,EAAe+D,EAGnB,CAKA,GAF4D,SAAjC3E,EAAa0E,IAAI,YAI1C,IACE,MAAMG,QAAsB9D,EAAiBlB,EAASQ,SAASP,IAC3D+E,EAAgB,GAClBjE,EAAeiE,EAEnB,OAASzD,GAET,MAGAR,EAAe,IAInBkE,IACC,CAACjF,EAASC,EAASE,EAAce,IAEpCyD,EAAAA,UAAU,KACkBvD,WACxB,GAAKpB,GAAYC,EAIjB,IACE,MAAMiF,QAAoBlE,EAAkBhB,EAASQ,SAASP,IAC9DS,EAAWwE,EAAYzE,QAEzB,OAAS0E,GAET,GAGFC,GAGA,MAAMC,EAAmBC,YAAY,KAC/B1E,EAAc,GAAKZ,GAAWC,GAChCgB,EAAoBjB,EAASQ,SAASP,GAAUsF,KAAKC,MAAM5E,IACxD6E,MAAMC,QAAQnE,QAElB,KAEH,MAAO,KACLoE,cAAcN,KAEf,CAACrF,EAASC,EAASe,EAAmBC,EAAqBL,IAG9D,MAAMgF,EAAWvB,EAAAA,QAAQ,KACvB,IAAKL,EAAO,MAAO,GAEnB,GAAIA,EAAM4B,UAAY5B,EAAM4B,SAASC,OAAS,EAC5C,OAAO7B,EAAM4B,SAASE,IAAI,CAACC,EAASC,IAE7BD,GAAoB,iBAAPA,EAOX,CACLvD,OAAQuD,EAAGE,gBAAkBF,EAAGvD,QAAWwD,EAAQ,EACnDvD,MAAOsD,EAAGtD,OAAS,WAAWsD,EAAGE,gBAAkBF,EAAGvD,QAAWwD,EAAQ,KARlE,CACLxD,OAAQwD,EAAQ,EAChBvD,MAAO,WAAWuD,EAAQ,MAYlC,MAAME,EAAgBlC,EAAMmC,gBAAkB,EAC9C,OAAOC,MAAM3E,KAAK,CAAEoE,OAAQK,GAAiB,CAACG,EAAGC,KAAA,CAC/C9D,OAAQ8D,EAAI,EACZ7D,MAAO,WAAW6D,EAAI,QAEvB,CAACtC,IAMJ,OAAIE,EAEAqC,EAAAA,KAAC,MAAA,CAAIC,UAAU,wEACbC,SAAA,CAAAC,EAAAA,IAACC,EAAA,IACDD,MAAC,MAAA,CAAIF,UAAU,gDACbC,eAAC,MAAA,CAAID,UAAU,cACbC,SAAAC,EAAAA,IAACE,GAAsBC,KAAK,KAAKC,KAAK,4BAO3C9C,EAoBHuC,EAAAA,KAAC,MAAA,CAAIC,UAAU,wEACbC,SAAA,CAAAC,EAAAA,IAACC,EAAA,UAEA,OAAA,CAAKH,UAAU,mCACdC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oBAEbC,SAAA,CAAAC,EAAAA,IAACK,EAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAGC,GAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BX,UAAU,OAEVC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oDACbC,SAAA,CAAAF,EAAAA,KAACc,EAAA,CAAKC,GAAG,IAAId,UAAU,oEACrBC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAEF,UAAU,sBAAwB,UAGvCE,EAAAA,IAAC,IAAA,CAAEF,UAAU,8CACZa,EAAA,CAAKC,GAAG,SAASd,UAAU,oEAAoEC,SAAA,UAGhGC,EAAAA,IAAC,IAAA,CAAEF,UAAU,wCACbE,EAAAA,IAACW,GAAKC,GAAI,UAAUtH,IAAWwG,UAAU,oEACtCC,SAAAzC,EAAMvB,QAETiE,EAAAA,IAAC,IAAA,CAAEF,UAAU,wCACbD,EAAAA,KAAC,OAAA,CAAKC,UAAU,4BAA4BC,SAAA,CAAA,WAASlG,UAKzDmG,EAAAA,IAACa,GAAcC,SAAUd,EAAAA,IAACe,GAAiBhF,MAAM,qBAAqBiF,QAAQ,+GAC5EjB,SAAAC,EAAAA,IAACK,EAAOY,IAAP,CAECV,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BS,WAAY,CAAEC,SAAU,IACxBrB,UAAU,8EAEVC,SAAAC,EAAAA,IAACoB,EAAA,CAECrH,UACAT,UACAqB,cAAed,EACfkC,MAAO,GAAGuB,EAAMvB,mBAAmBlC,IACnCwH,aArMW,CAACnH,EAAqBoH,KAC7CnH,EAAeD,IAqMHqH,OAlMK,OAmMLC,QA/LM,OAgMNC,QA5LM,OA6LNC,QAzLO7G,MA0LP8G,UAAU,EACVC,UAAWxH,EACX0F,UAAU,iBAZL,GAAGxG,KAAWO,MAPhB,GAAGP,KAAWO,OAyBvBgG,EAAAA,KAACQ,EAAOwB,QAAP,CACCtB,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BS,WAAY,CAAEC,SAAU,GAAKW,MAAO,IACpChC,UAAU,QAEVC,SAAA,CAAAF,EAAAA,KAAC,KAAA,CAAGC,UAAU,sEACZC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAEF,UAAU,0CAA4C,cAI3DE,EAAAA,IAAC,MAAA,CAAIF,UAAU,gFACbC,SAAAC,EAAAA,IAAC,OAAIF,UAAU,sFACZC,SAAoB,IAApBb,EAASC,OACRa,MAAC,OAAIF,UAAU,iCACbC,SAAAC,EAAAA,IAAC,IAAA,CAAEF,UAAU,gBAAgBC,SAAA,4BAG/Bb,EAASE,IAAKC,GAEPA,GAAoB,iBAAPA,GAAoBA,EAAGvD,QAAWuD,EAAGtD,MAMrDiE,EAAAA,IAACW,EAAA,CAECC,GAAI,WAAWtH,KAAW+F,EAAGvD,SAC7BgE,UAAW,gFACTT,EAAGvD,SAAWjC,EACV,uDACA,qHAGNkG,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,4CACbC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAW,iEACdT,EAAGvD,SAAWjC,EACV,cACA,eAEJkG,eAAC,IAAA,CAAED,UAAW,yBACZT,EAAGvD,SAAWjC,EACV,aACA,qBAGRmG,EAAAA,IAAC,IAAA,CAAEF,UAAU,wCAAyCC,WAAGjE,aApBtDuD,EAAGvD,QALH,MA6BRiG,OAAOC,gBAOlBhC,EAAAA,IAACK,EAAOwB,QAAP,CACCtB,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BS,WAAY,CAAEC,SAAU,GAAKW,MAAO,IACpChC,UAAU,QAEVC,eAAC,MAAA,CAAID,UAAU,gFACbC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,6BACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CACCiC,IAAK3E,EAAM4E,YAAc,6DAA6D5E,EAAMvB,uJAC5FoG,IAAK7E,EAAMvB,MACX+D,UAAU,6DACV4B,QAAUU,IACOA,EAAEC,OACVJ,IAAM,6DAA6D3E,EAAMvB,mKAGpF8D,EAAAA,KAAC,MAAA,CAAIC,UAAU,SACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,oDAAqDC,SAAAzC,EAAMvB,QACzEiE,EAAAA,IAAC,OAAIF,UAAU,4BACZC,WAAMnC,QAAQwB,IAAKkD,GAClBtC,EAAAA,IAAC,OAAA,CAECF,UAAU,uEAETC,SAAAuC,GAHIA,MAOXzC,EAAAA,KAAC,MAAA,CAAIC,UAAU,qDACbC,SAAA,CAAAF,EAAAA,KAAC,OAAA,CAAKC,UAAU,0BACdC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAEF,UAAU,uCACZ,OAAA,CAAKA,UAAU,gBAAiBC,SAAAzC,EAAMiF,QAAU,WAEnDvC,EAAAA,IAAC,OAAA,CAAKF,UAAU,cAAeC,WAAMyC,eACrC3C,EAAAA,KAAC,OAAA,CAAKC,UAAU,cAAeC,SAAA,CAAAzC,EAAMmC,gBAAkBnC,EAAM4B,UAAUC,QAAU,EAAE,kBAErFa,EAAAA,IAAC,KAAEF,UAAU,wCACVC,WAAM0C,aAAe,mCAAmCnF,EAAMvB,wHAQzE8D,EAAAA,KAACQ,EAAOwB,QAAP,CACCtB,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BS,WAAY,CAAEC,SAAU,GAAKW,MAAO,IACpChC,UAAU,QAEVC,SAAA,CAAAF,EAAAA,KAAC,KAAA,CAAGC,UAAU,sEACZC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qCAAuC,yBAIrD,MAAA,CAAIA,UAAU,8FACZC,SAAAhC,EACC2B,MAAM3E,KAAK,CAAEoE,OAAQ,IAAKC,IAAI,CAACO,EAAGL,IAChCO,OAAC,MAAA,CAAgBC,UAAU,kEACzBC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,6CACfE,EAAAA,IAAC,MAAA,CAAIF,UAAU,iCACfE,EAAAA,IAAC,MAAA,CAAIF,UAAU,oCAHPR,IAMVxB,EAAaqB,OAAS,EACxBrB,EAAasB,IAAI,CAACsD,EAAuBpD,KAEvC,MAAMqD,EAAc,CAClBC,IAAKF,EAAiBhG,GACtBX,MAAO2G,EAAiB3G,MACxB8G,MAAOH,EAAiBR,YAAc,kJACtCY,OAAQJ,EAAiBK,WACzBR,OAAQG,EAAiBH,QAAU,EACnCS,KAAMN,EAAiBM,OAAA,IAAYjG,MAAOkG,cAC1CzD,cAAekD,EAAiBjD,gBAAkB,EAClD5F,eAAgB,EAChB+D,OAAQ8E,EAAiB9E,QAAU,GACnCsF,OAAoC,YAA5BR,EAAiBQ,OAAuB,UACZ,cAA5BR,EAAiBQ,OAAyB,YACd,aAA5BR,EAAiBQ,OAAwB,WAAa,UAC9DT,YAAaC,EAAiBD,aAAe,GAC7C5G,KAAgC,OAA1B6G,EAAiB7G,KAAgB,KACP,UAA1B6G,EAAiB7G,KAAmB,QACV,QAA1B6G,EAAiB7G,KAAiB,MACR,YAA1B6G,EAAiB7G,KAAqB,UAAY,KACxDsH,QAAST,EAAiBS,SAAW,GACrCC,WAAY,EACZC,MAAO,GAGT,OACErD,EAAAA,IAACK,EAAOY,IAAP,CAECV,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BS,WAAY,CAAEC,SAAU,GAAKW,MAAO,GAAMxC,GAE1CS,SAAAC,EAAAA,IAACsD,EAAA,IAAcX,KALVD,EAAiBhG,MAU5BsD,EAAAA,IAAC,MAAA,CAAIF,UAAU,iCACbC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,qEACbC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAEF,UAAU,gDACbE,EAAAA,IAAC,KAAA,CAAGF,UAAU,mCAAmCC,SAAA,2BACjDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,6BAA6BC,SAAA,+CAG1CC,EAAAA,IAACW,EAAA,CACCC,GAAG,SACHd,UAAU,8GACXC,SAAA,0CAYd,SAAA,CAAOD,UAAU,qCAChBC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yCACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,wCACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,yBAAyByD,MAAO,CAAEC,WAAY,qBAAuBzD,SAAA,gBAGnFC,EAAAA,IAAC,IAAA,CAAEF,UAAU,gCAAgCC,SAAA,uHAK9C,MAAA,CACCA,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,qBAAqBC,SAAA,WACnCF,EAAAA,KAAC,KAAA,CAAGC,UAAU,0BACZC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGD,eAAC,IAAA,CAAE0D,KAAK,IAAI3D,UAAU,iEAAiEC,uBAC3FC,EAAAA,IAAC,MAAGD,SAAAC,EAAAA,IAAC,IAAA,CAAEyD,KAAK,IAAI3D,UAAU,iEAAiEC,SAAA,eAC3FC,EAAAA,IAAC,MAAGD,SAAAC,EAAAA,IAAC,IAAA,CAAEyD,KAAK,IAAI3D,UAAU,iEAAiEC,SAAA,mBAC3FC,EAAAA,IAAC,MAAGD,SAAAC,EAAAA,IAAC,IAAA,CAAEyD,KAAK,IAAI3D,UAAU,iEAAiEC,SAAA,6BAI9F,MAAA,CACCA,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,qBAAqBC,SAAA,WACnCF,EAAAA,KAAC,KAAA,CAAGC,UAAU,0BACZC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGD,eAAC,IAAA,CAAE0D,KAAK,IAAI3D,UAAU,iEAAiEC,sBAC3FC,EAAAA,IAAC,MAAGD,SAAAC,EAAAA,IAAC,IAAA,CAAEyD,KAAK,IAAI3D,UAAU,iEAAiEC,SAAA,cAC3FC,EAAAA,IAAC,MAAGD,SAAAC,EAAAA,IAAC,IAAA,CAAEyD,KAAK,IAAI3D,UAAU,iEAAiEC,SAAA,cAC3FC,EAAAA,IAAC,MAAGD,SAAAC,EAAAA,IAAC,IAAA,CAAEyD,KAAK,IAAI3D,UAAU,iEAAiEC,SAAA,0BAI9F,MAAA,CACCA,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,qBAAqBC,SAAA,YACnCF,EAAAA,KAAC,MAAA,CAAIC,UAAU,iBACbC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAEyD,KAAK,IAAI3D,UAAU,+EACpBC,SAAAC,EAAAA,IAAC,IAAA,CAAEF,UAAU,8BAEfE,EAAAA,IAAC,IAAA,CAAEyD,KAAK,IAAI3D,UAAU,+EACpBC,SAAAC,EAAAA,IAAC,IAAA,CAAEF,UAAU,+BAEfE,EAAAA,IAAC,IAAA,CAAEyD,KAAK,IAAI3D,UAAU,+EACpBC,SAAAC,EAAAA,IAAC,IAAA,CAAEF,UAAU,gCAEfE,EAAAA,IAAC,IAAA,CAAEyD,KAAK,IAAI3D,UAAU,+EACpBC,SAAAC,EAAAA,IAAC,IAAA,CAAEF,UAAU,uCAMrBE,MAAC,MAAA,CAAIF,UAAU,gEACbC,gBAAC,IAAA,CAAEA,SAAA,CAAA,mDACA,IAAA,CAAE0D,KAAK,iCAAiC3D,UAAU,sEAAsEC,SAAA,mCAxTjIF,EAAAA,KAAC,MAAA,CAAIC,UAAU,wEACbC,SAAA,CAAAC,EAAAA,IAACC,EAAA,IACDD,EAAAA,IAAC,MAAA,CAAIF,UAAU,gDACbC,SAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,cACbC,SAAAF,OAAC,MAAA,CAAIC,UAAU,kGACbC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAEF,UAAU,sDACbE,EAAAA,IAAC,KAAA,CAAGF,UAAU,wCAAwCC,SAAA,oBACtDC,EAAAA,IAACW,GAAKC,GAAG,SACPb,eAAC2D,EAAA,CAAOvD,KAAK,KAAKJ,SAAA,4BA0TlC"}