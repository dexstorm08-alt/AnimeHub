{"version":3,"file":"utils-BIWf2O9c.js","sources":["../../src/utils/playerUtils.ts"],"sourcesContent":["/**\r\n * Utility functions for player navigation and progress handling\r\n */\r\n\r\n/**\r\n * Generate a player URL with progress parameter for continue watching\r\n */\r\nexport function generatePlayerUrl(\r\n  animeId: string, \r\n  episodeNumber: number, \r\n  progressSeconds?: number\r\n): string {\r\n  const baseUrl = `/player/${animeId}/${episodeNumber}`;\r\n  \r\n  if (progressSeconds && progressSeconds > 0) {\r\n    return `${baseUrl}?progress=${Math.floor(progressSeconds)}&continue=true`;\r\n  }\r\n  \r\n  return baseUrl;\r\n}\r\n\r\n/**\r\n * Format time duration for display\r\n */\r\nexport function formatDuration(seconds: number): string {\r\n  const hours = Math.floor(seconds / 3600);\r\n  const minutes = Math.floor((seconds % 3600) / 60);\r\n  const secs = Math.floor(seconds % 60);\r\n\r\n  if (hours > 0) {\r\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  } else {\r\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\r\n  }\r\n}\r\n\r\n/**\r\n * Format progress percentage\r\n */\r\nexport function formatProgress(current: number, total: number): string {\r\n  if (total === 0) return '0%';\r\n  const percentage = Math.round((current / total) * 100);\r\n  return `${percentage}%`;\r\n}\r\n"],"names":["generatePlayerUrl","animeId","episodeNumber","progressSeconds","baseUrl","Math","floor"],"mappings":"AAOO,SAASA,EACdC,EACAC,EACAC,GAEA,MAAMC,EAAU,WAAWH,KAAWC,IAEtC,OAAIC,GAAmBA,EAAkB,EAChC,GAAGC,cAAoBC,KAAKC,MAAMH,mBAGpCC,CACT"}