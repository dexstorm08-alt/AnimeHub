{"version":3,"file":"TrailerSection-CyTpWws7.js","sources":["../../src/components/feature/TrailerSection.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { motion } from 'framer-motion'\n\ninterface TrailerSectionProps {\n  trailerUrl: string | null\n  title: string\n}\n\nexport default function TrailerSection({ trailerUrl, title }: TrailerSectionProps) {\n  const [isPlaying, setIsPlaying] = useState(false)\n\n  if (!trailerUrl) {\n    return null\n  }\n\n  // Extract video ID from various platforms\n  const getVideoId = (url: string): { platform: string, id: string } | null => {\n    // YouTube (including nocookie)\n    const youtubeRegex = /(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/|youtube\\.com\\/embed\\/|youtube-nocookie\\.com\\/embed\\/)([^&\\n?#]+)/\n    const youtubeMatch = url.match(youtubeRegex)\n    if (youtubeMatch) {\n      return { platform: 'youtube', id: youtubeMatch[1] }\n    }\n\n    // Dailymotion\n    const dailymotionRegex = /(?:dailymotion\\.com\\/embed\\/video\\/|dailymotion\\.com\\/video\\/)([^&\\n?#]+)/\n    const dailymotionMatch = url.match(dailymotionRegex)\n    if (dailymotionMatch) {\n      return { platform: 'dailymotion', id: dailymotionMatch[1] }\n    }\n\n    // Vimeo\n    const vimeoRegex = /(?:vimeo\\.com\\/|player\\.vimeo\\.com\\/video\\/)([^&\\n?#]+)/\n    const vimeoMatch = url.match(vimeoRegex)\n    if (vimeoMatch) {\n      return { platform: 'vimeo', id: vimeoMatch[1] }\n    }\n\n    return null\n  }\n\n  // Check if it's a supported video platform\n  const isYouTube = trailerUrl.includes('youtube.com') || trailerUrl.includes('youtu.be') || trailerUrl.includes('youtube-nocookie.com')\n  const isDailymotion = trailerUrl.includes('dailymotion.com')\n  const isVimeo = trailerUrl.includes('vimeo.com')\n  const videoInfo = getVideoId(trailerUrl)\n  \n  // For unsupported URLs, we'll show a simple video player\n  if (!videoInfo) {\n    return (\n      <motion.section\n        initial={{ opacity: 0, y: 30 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n        className=\"mb-12\"\n      >\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-2xl md:text-3xl font-bold text-teal-800 flex items-center\">\n            <i className=\"ri-play-circle-line mr-3 text-red-500\"></i>\n            Official Trailer\n          </h2>\n        </div>\n\n        <div className=\"aspect-video bg-gray-900 rounded-2xl overflow-hidden shadow-2xl\">\n          <video\n            controls\n            className=\"w-full h-full\"\n            poster=\"https://readdy.ai/api/search-image?query=Anime%20trailer%20thumbnail&width=1280&height=720&seq=video-trailer&orientation=landscape\"\n          >\n            <source src={trailerUrl} type=\"video/mp4\" />\n            <source src={trailerUrl} type=\"video/webm\" />\n            Your browser does not support the video tag.\n          </video>\n        </div>\n      </motion.section>\n    )\n  }\n\n  if (!videoInfo) {\n    return null\n  }\n\n  // Get thumbnail and embed URLs based on platform\n  const getThumbnailUrl = (platform: string, id: string): string => {\n    switch (platform) {\n      case 'youtube':\n        return `https://img.youtube.com/vi/${id}/maxresdefault.jpg`\n      case 'dailymotion':\n        return `https://www.dailymotion.com/thumbnail/video/${id}`\n      case 'vimeo':\n        return `https://vumbnail.com/${id}.jpg`\n      default:\n        return ''\n    }\n  }\n\n  const getEmbedUrl = (platform: string, id: string): string => {\n    switch (platform) {\n      case 'youtube':\n        return `https://www.youtube.com/embed/${id}?autoplay=1&rel=0&modestbranding=1`\n      case 'dailymotion':\n        return `https://www.dailymotion.com/embed/video/${id}`\n      case 'vimeo':\n        return `https://player.vimeo.com/video/${id}?autoplay=1`\n      default:\n        return ''\n    }\n  }\n\n  const thumbnailUrl = getThumbnailUrl(videoInfo.platform, videoInfo.id)\n  const embedUrl = getEmbedUrl(videoInfo.platform, videoInfo.id)\n\n  return (\n    <motion.section\n      initial={{ opacity: 0, y: 30 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.6 }}\n      className=\"mb-12\"\n    >\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-2xl md:text-3xl font-bold text-teal-800 flex items-center\">\n          <i className=\"ri-play-circle-line mr-3 text-red-500\"></i>\n          Official Trailer\n        </h2>\n      </div>\n\n      <div className=\"aspect-video bg-gray-900 rounded-2xl overflow-hidden shadow-2xl\">\n        {!isPlaying ? (\n          // Trailer Preview\n          <div className=\"relative group cursor-pointer h-full\" onClick={() => setIsPlaying(true)}>\n            <img\n              src={thumbnailUrl}\n              alt={`${title} Trailer`}\n              className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n              onError={(e) => {\n                // Fallback to a default thumbnail if YouTube thumbnail fails\n                e.currentTarget.src = 'https://readdy.ai/api/search-image?query=Anime%20trailer%20thumbnail&width=1280&height=720&seq=trailer-fallback&orientation=landscape'\n              }}\n            />\n            \n            {/* Play Button Overlay */}\n            <div className=\"absolute inset-0 bg-black/30 flex items-center justify-center group-hover:bg-black/20 transition-colors duration-300\">\n              <div className=\"w-20 h-20 bg-red-600 rounded-full flex items-center justify-center shadow-2xl group-hover:scale-110 transition-transform duration-300\">\n                <i className=\"ri-play-fill text-white text-3xl ml-1\"></i>\n              </div>\n            </div>\n\n            {/* Trailer Label */}\n            <div className=\"absolute top-4 left-4\">\n              <div className=\"bg-red-600 text-white px-3 py-1 rounded-full text-sm font-medium\">\n                <i className=\"ri-movie-line mr-1\"></i>\n                Official Trailer\n              </div>\n            </div>\n\n            {/* Hover Effect */}\n            <div className=\"absolute inset-0 rounded-2xl border-2 border-transparent group-hover:border-red-500/50 transition-colors duration-300\"></div>\n          </div>\n        ) : (\n          // YouTube Embed\n          <iframe\n            src={embedUrl}\n            title={`${title} Official Trailer`}\n            className=\"w-full h-full\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          />\n        )}\n      </div>\n    </motion.section>\n  )\n}\n"],"names":["TrailerSection","trailerUrl","title","isPlaying","setIsPlaying","useState","includes","videoInfo","url","youtubeMatch","match","platform","id","dailymotionMatch","vimeoMatch","getVideoId","jsxs","motion","section","initial","opacity","y","animate","transition","duration","className","children","jsx","controls","poster","src","type","thumbnailUrl","getThumbnailUrl","embedUrl","getEmbedUrl","allow","allowFullScreen","onClick","alt","onError","e","currentTarget"],"mappings":"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"}