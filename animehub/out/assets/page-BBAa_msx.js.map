{"version":3,"mappings":"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","names":["lazy","__vitePreload","import","then","n","e","__VITE_PRELOAD__","f","j","g","T","i","LazyTrailerSection","LazyRelatedAnime","LazyAnimeCharacters","AnimeDetailPage","id","useParams","user","useAuthContext","selectedEpisode","setSelectedEpisode","useState","isInWatchlist","setIsInWatchlist","isFavorite","setIsFavorite","showToast","setShowToast","watchProgress","setWatchProgress","progressSeconds","setProgressSeconds","anime","loading","animeLoading","error","animeError","useAnimeById","similarAnime","useAnime","limit","addToWatchlist","removeFromWatchlist","checkWatchlist","useWatchlist","addToFavorites","removeFromFavorites","isInFavorites","checkFavorites","useFavorites","useEffect","async","watchlistStatus","favoritesStatus","Promise","all","user_progress","length","recentProgress","filter","progress","is_completed","sort","a","b","Date","last_watched","getTime","episode","episodes","find","ep","episode_id","episode_number","progress_seconds","savedFavorites","JSON","parse","localStorage","getItem","savedWatchlist","some","item","checkUserData","showToastMessage","message","setTimeout","jsxs","className","children","jsx","Navbar","SparkleLoadingSpinner","size","text","Link","to","Button","Array","from","total_episodes","_","title","thumbnail_url","replace","duration","banner_url","src","alt","onError","currentTarget","style","display","ErrorBoundary","fallback","ContentError","motion","div","initial","opacity","x","animate","transition","poster_url","delay","rating","year","status","charAt","toUpperCase","slice","genres","map","genre","index","colors","colorClass","description","substring","generatePlayerUrl","whileHover","scale","boxShadow","y","whileTap","type","stiffness","damping","repeat","Infinity","disabled","variant","onClick","updatedWatchlist","setItem","stringify","animeData","image","addedAt","toISOString","rotate","updatedFavorites","section","width","SectionError","episodeNumber","number","episodeTitle","episodeDuration","savedProgress","newProgress","Math","max","updatedProgress","handleEpisodeClick","floor","toString","padStart","Suspense","trailerUrl","trailer_url","animeId","currentTitle","currentGenres","similarAnimeItem","mappedAnime","_id","cover","banner","getFullYear","totalEpisodes","currentEpisode","studios","popularity","views","AnimeCard","fontFamily","href","exit","c","I","Y","d"],"ignoreList":[],"sources":["../../src/components/LazyComponents.tsx","../../src/pages/anime-detail/page.tsx"],"sourcesContent":["// Lazy Loading Components for AnimeHub\r\n// Reduces initial bundle size by loading components on demand\r\n\r\nimport { lazy } from 'react';\r\n\r\n// Admin Components - Load only when needed\r\nexport const LazyAddAnimeModal = lazy(() => import('./admin/AddAnimeModal'));\r\nexport const LazyAddEpisodeModal = lazy(() => import('./admin/AddEpisodeModal'));\r\nexport const LazyEditAnimeModal = lazy(() => import('./admin/EditAnimeModal'));\r\nexport const LazyEditEpisodeModal = lazy(() => import('./admin/EditEpisodeModal'));\r\nexport const LazyAnimeScraperComponent = lazy(() => import('./admin/AnimeScraperComponent'));\r\nexport const LazyHiAnimeScraperComponent = lazy(() => import('./admin/HiAnimeScraperComponent'));\r\nexport const LazyEnhancedAnimeImporter = lazy(() => import('./admin/EnhancedAnimeImporter'));\r\nexport const LazyLargeAnimeScraper = lazy(() => import('./admin/LargeAnimeScraper'));\r\nexport const LazyImportAnalyticsDashboard = lazy(() => import('./admin/ImportAnalyticsDashboard'));\r\nexport const LazyTrailerDebugger = lazy(() => import('./admin/TrailerDebugger'));\r\nexport const LazyEpisodeStatusManager = lazy(() => import('./admin/EpisodeStatusManager'));\r\nexport const LazyScrapedEpisodesModal = lazy(() => import('./admin/ScrapedEpisodesModal'));\r\n\r\n// Feature Components - Load on demand\r\nexport const LazyTrailerSection = lazy(() => import('./feature/TrailerSection'));\r\nexport const LazyRelatedAnime = lazy(() => import('./feature/RelatedAnime'));\r\nexport const LazyAnimeCharacters = lazy(() => import('./feature/AnimeCharacters'));\r\nexport const LazyNotificationCenter = lazy(() => import('./feature/NotificationCenter'));\r\n\r\n// Player Components - Load when video is needed\r\nexport const LazySmartVideoPlayer = lazy(() => import('./player/SmartVideoPlayer'));\r\nexport const LazyIframePlayer = lazy(() => import('./player/IframePlayer'));\r\nexport const LazyYouTubePlayer = lazy(() => import('./player/YouTubePlayer'));\r\n\r\n// Auth Components - Load when authentication is needed\r\nexport const LazyLoginModal = lazy(() => import('./auth/LoginModal'));\r\nexport const LazySignUpModal = lazy(() => import('./auth/SignUpModal'));\r\n\r\n// Profile Components - Load when user profile is accessed\r\nexport const LazyGenrePreferences = lazy(() => import('./profile/GenrePreferences'));\r\n\r\n// Search Components - Load when search is used\r\nexport const LazyLiveSearchDropdown = lazy(() => import('./search/LiveSearchDropdown'));\r\n\r\n// Admin Pages - Load only for admin users\r\nexport const LazyAdminAnalytics = lazy(() => import('../pages/admin/analytics/page'));\r\nexport const LazyAdminReports = lazy(() => import('../pages/admin/reports/page'));\r\nexport const LazyAdminUsers = lazy(() => import('../pages/admin/users/page'));\r\nexport const LazyAdminSettings = lazy(() => import('../pages/admin/settings/page'));\r\n\r\n// Loading fallback component\r\nexport const LazyLoadingFallback = () => (\r\n  <div className=\"flex items-center justify-center p-8\">\r\n    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-teal-600\"></div>\r\n    <span className=\"ml-2 text-teal-600\">Loading...</span>\r\n  </div>\r\n);\r\n\r\n// Error boundary for lazy components\r\nexport const LazyErrorFallback = ({ error, retry }: { error: Error; retry: () => void }) => (\r\n  <div className=\"flex flex-col items-center justify-center p-8 text-center\">\r\n    <div className=\"text-red-500 mb-4\">\r\n      <i className=\"ri-error-warning-line text-4xl\"></i>\r\n    </div>\r\n    <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">Failed to load component</h3>\r\n    <p className=\"text-gray-600 mb-4\">{error.message}</p>\r\n    <button\r\n      onClick={retry}\r\n      className=\"px-4 py-2 bg-teal-600 text-white rounded-lg hover:bg-teal-700 transition-colors\"\r\n    >\r\n      Try Again\r\n    </button>\r\n  </div>\r\n);\r\n","\nimport { useState, useEffect, Suspense } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport Navbar from '../../components/feature/Navbar';\nimport AnimeCard from '../../components/feature/AnimeCard';\nimport { LazyTrailerSection, LazyRelatedAnime, LazyAnimeCharacters } from '../../components/LazyComponents';\nimport Button from '../../components/base/Button';\nimport { SparkleLoadingSpinner } from '../../components/base/LoadingSpinner';\nimport { useAuthContext } from '../../contexts/AuthContext';\nimport { useAnimeById, useAnime } from '../../hooks/useAnime';\nimport { useWatchlist } from '../../hooks/useWatchlist';\nimport { useFavorites } from '../../hooks/useFavorites';\nimport { generatePlayerUrl } from '../../utils/playerUtils';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport { SectionError, ContentError } from '../../components/ErrorFallbacks';\n\nexport default function AnimeDetailPage() {\n  const { id } = useParams<{ id: string }>();\n  const { user } = useAuthContext();\n  const [selectedEpisode, setSelectedEpisode] = useState(1);\n  const [isInWatchlist, setIsInWatchlist] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [showToast, setShowToast] = useState<string | null>(null);\n  const [watchProgress, setWatchProgress] = useState(0);\n  const [progressSeconds, setProgressSeconds] = useState(0);\n  \n  const { anime, loading: animeLoading, error: animeError } = useAnimeById(id!, user?.id);\n  const { anime: similarAnime } = useAnime({ limit: 6 });\n  const { addToWatchlist, removeFromWatchlist, isInWatchlist: checkWatchlist } = useWatchlist();\n  const { addToFavorites, removeFromFavorites, isInFavorites: checkFavorites } = useFavorites();\n\n  // Check if anime is in user's watchlist and favorites\n  useEffect(() => {\n    const checkUserData = async () => {\n      if (anime && user) {\n        try {\n          const [watchlistStatus, favoritesStatus] = await Promise.all([\n            checkWatchlist(anime.id),\n            checkFavorites(anime.id)\n          ]);\n          setIsInWatchlist(watchlistStatus);\n          setIsFavorite(favoritesStatus);\n\n          // Extract continue watching data from user_progress\n          if (anime.user_progress && anime.user_progress.length > 0) {\n            // Find the most recent episode with progress\n            const recentProgress = anime.user_progress\n              .filter((progress: any) => !progress.is_completed)\n              .sort((a: any, b: any) => new Date(b.last_watched).getTime() - new Date(a.last_watched).getTime())[0];\n            \n            if (recentProgress) {\n              // Find the episode number for this progress\n              const episode = anime.episodes?.find((ep: any) => ep.id === recentProgress.episode_id);\n              if (episode) {\n                setWatchProgress(episode.episode_number);\n                setProgressSeconds(recentProgress.progress_seconds);\n              }\n            }\n          }\n        } catch (error) {\n          console.error('Error checking user data:', error);\n        }\n      } else if (anime && !user) {\n        // Fallback to localStorage for non-logged-in users\n        const savedFavorites = JSON.parse(localStorage.getItem('favorites') || '[]');\n        const savedWatchlist = JSON.parse(localStorage.getItem('watchlist') || '[]');\n        setIsFavorite(savedFavorites.some((item: any) => item.id === anime.id));\n        setIsInWatchlist(savedWatchlist.some((item: any) => item.id === anime.id));\n      }\n    };\n\n    checkUserData();\n  }, [anime, user, checkWatchlist, checkFavorites]);\n\n  const showToastMessage = (message: string) => {\n    setShowToast(message);\n    setTimeout(() => setShowToast(null), 3000);\n  };\n\n  const handleWatchlistToggle = async () => {\n    if (!anime) return;\n    \n    if (!user) {\n      // Fallback to localStorage for non-logged-in users\n      const savedWatchlist = JSON.parse(localStorage.getItem('watchlist') || '[]');\n      \n      if (isInWatchlist) {\n        // Remove from watchlist\n        const updatedWatchlist = savedWatchlist.filter((item: any) => item.id !== anime.id);\n        localStorage.setItem('watchlist', JSON.stringify(updatedWatchlist));\n        setIsInWatchlist(false);\n        showToastMessage('Removed from watchlist');\n      } else {\n        // Add to watchlist\n        const animeData = {\n          id: anime.id,\n          title: anime.title,\n          image: anime.poster_url,\n          rating: anime.rating,\n          year: anime.year,\n          episodes: anime.total_episodes,\n          genres: anime.genres,\n          status: anime.status,\n          description: anime.description,\n          addedAt: new Date().toISOString()\n        };\n        const updatedWatchlist = [...savedWatchlist, animeData];\n        localStorage.setItem('watchlist', JSON.stringify(updatedWatchlist));\n        setIsInWatchlist(true);\n        showToastMessage('Added to watchlist (local storage)');\n      }\n      return;\n    }\n\n    try {\n      if (isInWatchlist) {\n        await removeFromWatchlist(anime.id);\n        setIsInWatchlist(false);\n        showToastMessage('Removed from watchlist');\n      } else {\n        await addToWatchlist(anime.id);\n        setIsInWatchlist(true);\n        showToastMessage('Added to watchlist');\n      }\n    } catch (error) {\n      console.error('Error updating watchlist:', error);\n      showToastMessage('Failed to update watchlist. Please try again.');\n    }\n  };\n\n  const handleFavoriteToggle = async () => {\n    if (!anime) return;\n    \n    if (!user) {\n      // Fallback to localStorage for non-logged-in users\n      const savedFavorites = JSON.parse(localStorage.getItem('favorites') || '[]');\n      \n      if (isFavorite) {\n        // Remove from favorites\n        const updatedFavorites = savedFavorites.filter((item: any) => item.id !== anime.id);\n        localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n        setIsFavorite(false);\n        showToastMessage('Removed from favorites');\n      } else {\n        // Add to favorites\n        const animeData = {\n          id: anime.id,\n          title: anime.title,\n          image: anime.poster_url,\n          rating: anime.rating,\n          year: anime.year,\n          episodes: anime.total_episodes,\n          genres: anime.genres,\n          status: anime.status,\n          description: anime.description,\n          addedAt: new Date().toISOString()\n        };\n        const updatedFavorites = [...savedFavorites, animeData];\n        localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n        setIsFavorite(true);\n        showToastMessage('Added to favorites (local storage)');\n      }\n      return;\n    }\n\n    try {\n      if (isFavorite) {\n        await removeFromFavorites(anime.id);\n        setIsFavorite(false);\n        showToastMessage('Removed from favorites');\n      } else {\n        await addToFavorites(anime.id);\n        setIsFavorite(true);\n        showToastMessage('Added to favorites');\n      }\n    } catch (error) {\n      console.error('Error updating favorites:', error);\n      showToastMessage('Failed to update favorites. Please try again.');\n    }\n  };\n\n  const handleEpisodeClick = (episodeNumber: number) => {\n    setSelectedEpisode(episodeNumber);\n    // Update watch progress\n    if (anime) {\n      const savedProgress = JSON.parse(localStorage.getItem('watchProgress') || '{}');\n      const newProgress = Math.max(savedProgress[anime.id] || 0, episodeNumber);\n      const updatedProgress = { ...savedProgress, [anime.id]: newProgress };\n      localStorage.setItem('watchProgress', JSON.stringify(updatedProgress));\n      setWatchProgress(newProgress);\n    }\n  };\n\n  // Show loading state while fetching data\n  if (animeLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-yellow-50 to-pink-50\">\n        <Navbar />\n        <div className=\"flex items-center justify-center min-h-[60vh]\">\n          <div className=\"text-center\">\n            <SparkleLoadingSpinner size=\"xl\" text=\"Loading anime details...\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state only after loading is complete and no anime found\n  if (animeError || (!animeLoading && !anime)) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-yellow-50 to-pink-50\">\n        <Navbar />\n        <div className=\"flex items-center justify-center min-h-[60vh]\">\n          <div className=\"text-center\">\n            <div className=\"bg-white/95 backdrop-blur-sm rounded-2xl shadow-xl p-16 max-w-md mx-auto border border-white/50\">\n              <i className=\"ri-error-warning-line text-7xl text-teal-300 mb-6\"></i>\n              <h2 className=\"text-2xl font-bold text-teal-800 mb-4\">Anime not found</h2>\n              <p className=\"text-teal-600 mb-6 text-lg\">The anime you're looking for doesn't exist.</p>\n              <Link to=\"/anime\">\n                <Button size=\"lg\">Browse Anime</Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Generate episodes from database or fallback\n  const episodes = anime.episodes || Array.from({ length: anime.total_episodes || 1 }, (_, i) => ({\n    id: i + 1,\n    episode_number: i + 1,\n    title: `Episode ${i + 1}`,\n    thumbnail_url: `https://readdy.ai/api/search-image?query=Anime%20episode%20scene%20from%20${anime.title.replace(/\\s+/g, '%20')}%2C%20Studio%20Ghibli%20style%2C%20magical%20atmosphere%2C%20detailed%20animation%20frame%2C%20simple%20background&width=200&height=120&seq=ep${i + 1}&orientation=landscape`,\n    duration: anime.duration || 1470 // 24:30 in seconds\n  }));\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-yellow-50 to-pink-50\">\n      <Navbar />\n      \n      {/* Hero Section */}\n      <div className=\"relative\">\n        {/* Background Image */}\n        {anime.banner_url && (\n          <div className=\"absolute inset-0 h-96 md:h-[500px] lg:h-[600px]\">\n            <img\n              src={anime.banner_url}\n              alt={anime.title}\n              className=\"w-full h-full object-cover\"\n              onError={(e) => {\n                e.currentTarget.style.display = 'none'\n              }}\n            />\n            <div className=\"absolute inset-0 bg-gradient-to-r from-black/70 via-black/50 to-black/30\" />\n            <div className=\"absolute inset-0 backdrop-blur-sm\" />\n          </div>\n        )}\n        \n        {/* Content */}\n        <ErrorBoundary fallback={<ContentError title=\"Anime Details Error\" message=\"Couldn't load anime details. Please try again.\" />}>\n          <div className=\"relative z-10 min-h-[400px] md:min-h-[500px] lg:min-h-[600px] flex items-end\">\n          <div className=\"w-full px-4 sm:px-6 lg:px-8 py-12\">\n            <div className=\"max-w-7xl mx-auto\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 items-center\">\n                \n                {/* Left: Poster */}\n                <motion.div\n                  initial={{ opacity: 0, x: -50 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.8 }}\n                  className=\"lg:col-span-1\"\n                >\n                  <div className=\"w-64 h-96 mx-auto lg:mx-0 rounded-2xl overflow-hidden shadow-2xl\">\n                    <img\n                      src={anime.poster_url || \"https://readdy.ai/api/search-image?query=Anime%20poster&width=300&height=450&seq=anime-poster&orientation=portrait\"}\n                      alt={anime.title}\n                      className=\"w-full h-full object-cover\"\n                      onError={(e) => {\n                        e.currentTarget.src = \"https://readdy.ai/api/search-image?query=Anime%20poster&width=300&height=450&seq=anime-poster-fallback&orientation=portrait\"\n                      }}\n                    />\n                  </div>\n                </motion.div>\n\n                {/* Right: Info */}\n                <motion.div\n                  initial={{ opacity: 0, x: 50 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.8, delay: 0.2 }}\n                  className=\"lg:col-span-2 text-white\"\n                >\n                  <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-bold mb-4 leading-tight break-words hyphens-auto overflow-hidden\">\n                    {anime.title}\n                  </h1>\n                  \n                  {/* Stats */}\n                  <div className=\"flex flex-wrap items-center gap-4 mb-4\">\n                    <div className=\"flex items-center gap-2 bg-white/20 backdrop-blur-md px-6 py-3 rounded-full border border-white/40 shadow-lg\">\n                      <i className=\"ri-star-fill text-yellow-400 text-lg\"></i>\n                      <span className=\"font-bold text-lg\">{anime.rating}</span>\n                    </div>\n                    <div className=\"flex items-center gap-2 bg-white/20 backdrop-blur-md px-6 py-3 rounded-full border border-white/40 shadow-lg\">\n                      <i className=\"ri-calendar-line text-blue-300 text-lg\"></i>\n                      <span className=\"font-semibold\">{anime.year}</span>\n                    </div>\n                    {anime.total_episodes && anime.total_episodes > 0 && (\n                      <div className=\"flex items-center gap-2 bg-white/20 backdrop-blur-md px-6 py-3 rounded-full border border-white/40 shadow-lg\">\n                        <i className=\"ri-calendar-check-line text-purple-300 text-lg\"></i>\n                        <span className=\"font-semibold\">{anime.total_episodes} episodes planned</span>\n                      </div>\n                    )}\n                    {anime.status && (\n                      <span className={`px-6 py-3 rounded-full text-sm font-bold backdrop-blur-md border border-white/40 shadow-lg ${\n                        anime.status === 'completed' \n                          ? 'bg-green-500/60 text-white'\n                          : anime.status === 'ongoing'\n                          ? 'bg-blue-500/60 text-white'\n                          : 'bg-gray-500/60 text-white'\n                      }`}>\n                        {anime.status.charAt(0).toUpperCase() + anime.status.slice(1)}\n                      </span>\n                    )}\n                  </div>\n\n                  {/* Genres */}\n                  {anime.genres && anime.genres.length > 0 && (\n                    <div className=\"flex flex-wrap gap-2 mb-4\">\n                      {anime.genres.map((genre: string, index: number) => {\n                        const colors = [\n                          'bg-gradient-to-r from-pink-500/80 to-rose-500/80',\n                          'bg-gradient-to-r from-blue-500/80 to-cyan-500/80',\n                          'bg-gradient-to-r from-green-500/80 to-emerald-500/80',\n                          'bg-gradient-to-r from-purple-500/80 to-violet-500/80',\n                          'bg-gradient-to-r from-orange-500/80 to-yellow-500/80',\n                          'bg-gradient-to-r from-red-500/80 to-pink-500/80',\n                          'bg-gradient-to-r from-indigo-500/80 to-blue-500/80',\n                          'bg-gradient-to-r from-teal-500/80 to-green-500/80'\n                        ];\n                        const colorClass = colors[index % colors.length];\n                        \n                        return (\n                          <span\n                            key={genre}\n                            className={`px-4 py-2 ${colorClass} backdrop-blur-md text-white text-sm rounded-full font-semibold border border-white/50 shadow-lg hover:scale-105 transition-transform duration-200`}\n                          >\n                            {genre}\n                          </span>\n                        );\n                      })}\n                    </div>\n                  )}\n\n                  {/* Description */}\n                  {anime.description && (\n                    <div className=\"bg-white/15 backdrop-blur-md rounded-2xl p-6 mb-6 border border-white/40 shadow-lg max-w-3xl\">\n                      <h3 className=\"text-white/90 text-sm font-semibold uppercase tracking-wider mb-4 opacity-80\">\n                        Synopsis\n                      </h3>\n                      <p className=\"text-white text-base leading-relaxed font-normal tracking-wide\">\n                        {anime.description.length > 300 \n                          ? `${anime.description.substring(0, 300)}...` \n                          : anime.description\n                        }\n                      </p>\n                    </div>\n                  )}\n\n                  {/* Action Buttons */}\n                  <div className=\"flex flex-wrap gap-4\">\n                    {(anime.episodes && anime.episodes.length > 0) ? (\n                      <Link to={generatePlayerUrl(anime.id, watchProgress > 0 ? watchProgress : 1, watchProgress > 0 ? progressSeconds : undefined)}>\n                        <motion.div \n                          whileHover={{ \n                            scale: 1.08, \n                            boxShadow: \"0 20px 40px rgba(59, 130, 246, 0.4)\",\n                            y: -3\n                          }} \n                          whileTap={{ scale: 0.95 }}\n                          transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n                        >\n                          <Button size=\"lg\" className=\"bg-gradient-to-r from-blue-600/80 to-purple-600/80 hover:from-blue-700/90 hover:to-purple-700/90 backdrop-blur-lg text-white px-8 py-4 text-lg font-bold border border-white/60 shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:scale-105\">\n                            <motion.i \n                              className=\"ri-play-fill mr-2\"\n                              animate={{ scale: [1, 1.1, 1] }}\n                              transition={{ duration: 2, repeat: Infinity }}\n                            ></motion.i>\n                            {watchProgress > 0 ? 'Continue Watching' : 'Watch Now'}\n                          </Button>\n                        </motion.div>\n                      </Link>\n                    ) : (\n                      <motion.div \n                        whileHover={{ \n                          scale: 1.02, \n                          boxShadow: \"0 10px 20px rgba(107, 114, 128, 0.2)\",\n                          y: -1\n                        }} \n                        transition={{ type: \"spring\", stiffness: 200, damping: 20 }}\n                      >\n                        <Button \n                          size=\"lg\" \n                          disabled\n                          className=\"bg-gradient-to-r from-gray-600/60 to-gray-700/60 backdrop-blur-lg text-white/70 px-8 py-4 text-lg font-bold border border-white/40 shadow-lg cursor-not-allowed opacity-75\"\n                        >\n                          <i className=\"ri-calendar-line mr-2\"></i>\n                          Upcoming\n                        </Button>\n                      </motion.div>\n                    )}\n                    \n                    <motion.div \n                      whileHover={{ \n                        scale: 1.05, \n                        boxShadow: \"0 15px 30px rgba(255, 255, 255, 0.2)\",\n                        y: -2\n                      }} \n                      whileTap={{ scale: 0.95 }}\n                      transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n                    >\n                      <Button \n                        variant=\"secondary\" \n                        size=\"lg\" \n                        onClick={handleWatchlistToggle}\n                        className=\"bg-white/25 backdrop-blur-lg text-white border-white/60 hover:bg-white/35 px-8 py-4 text-lg font-semibold shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105\"\n                      >\n                        <motion.i \n                          className={`mr-2 ${isInWatchlist ? 'ri-check-line' : 'ri-add-line'}`}\n                          animate={isInWatchlist ? { rotate: [0, 10, -10, 0] } : {}}\n                          transition={{ duration: 0.5 }}\n                        ></motion.i>\n                        {isInWatchlist ? 'In Watchlist' : 'Add to Watchlist'}\n                      </Button>\n                    </motion.div>\n\n                    <motion.div \n                      whileHover={{ \n                        scale: 1.05, \n                        boxShadow: \"0 15px 30px rgba(255, 255, 255, 0.2)\",\n                        y: -2\n                      }} \n                      whileTap={{ scale: 0.95 }}\n                      transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n                    >\n                      <Button \n                        variant=\"secondary\" \n                        size=\"lg\" \n                        onClick={handleFavoriteToggle}\n                        className=\"bg-white/25 backdrop-blur-lg text-white border-white/60 hover:bg-white/35 px-8 py-4 text-lg font-semibold shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105\"\n                      >\n                        <motion.i \n                          className={`mr-2 ${isFavorite ? 'ri-heart-fill text-red-400' : 'ri-heart-line'}`}\n                          animate={isFavorite ? { scale: [1, 1.2, 1] } : {}}\n                          transition={{ duration: 0.6 }}\n                        ></motion.i>\n                        {isFavorite ? 'Favorited' : 'Add to Favorites'}\n                      </Button>\n                    </motion.div>\n                  </div>\n                </motion.div>\n              </div>\n            </div>\n          </div>\n        </div>\n        </ErrorBoundary>\n      </div>\n\n      <main className=\"w-full px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Progress Bar Section */}\n          {isInWatchlist && watchProgress > 0 && (\n            <motion.section\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8 }}\n              className=\"mb-16\"\n            >\n              <div className=\"bg-white/95 backdrop-blur-sm rounded-2xl shadow-xl p-8 border border-white/50\">\n                <div className=\"flex justify-between text-sm text-teal-600 mb-3 font-medium\">\n                  <span>Your Progress</span>\n                  <span>{watchProgress}/{anime.total_episodes || anime.episodes?.length || 0} episodes</span>\n                </div>\n                <div className=\"w-full bg-teal-100 rounded-full h-3\">\n                  <div \n                    className=\"bg-teal-500 h-3 rounded-full transition-all duration-300\"\n                    style={{ width: `${(watchProgress / (anime.total_episodes || anime.episodes?.length || 1)) * 100}%` }}\n                  ></div>\n                </div>\n              </div>\n            </motion.section>\n          )}\n\n          {/* Episodes Section */}\n          <ErrorBoundary fallback={<SectionError title=\"Episodes Error\" message=\"Couldn't load episodes list. Please try again.\" />}>\n            <motion.section\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.6 }}\n              className=\"mb-16\"\n            >\n            <h2 className=\"text-2xl md:text-3xl font-bold text-teal-800 mb-8 flex items-center\">\n              <i className=\"ri-play-list-line mr-3 text-green-600\"></i>\n              Episodes\n            </h2>\n            \n            <div className=\"bg-white/95 backdrop-blur-sm rounded-2xl shadow-xl p-8 border border-white/50\">\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n                {episodes.map((episode: any) => {\n                  const episodeNumber = episode.episode_number || episode.number;\n                  const episodeTitle = episode.title || `Episode ${episodeNumber}`;\n                  const episodeDuration = episode.duration;\n                  \n                  return (\n                    <motion.div\n                      key={episode.id || episodeNumber}\n                      whileHover={{ scale: 1.02, y: -2 }}\n                      className={`p-6 rounded-xl border-2 transition-all duration-300 cursor-pointer ${\n                        selectedEpisode === episodeNumber\n                          ? 'border-teal-500 bg-gradient-to-br from-teal-50 to-teal-100 shadow-lg'\n                          : episodeNumber <= watchProgress\n                          ? 'border-green-300 bg-gradient-to-br from-green-50 to-green-100 shadow-md'\n                          : 'border-gray-200 hover:border-teal-300 hover:bg-gradient-to-br hover:from-teal-50 hover:to-teal-100 hover:shadow-md'\n                      }`}\n                      onClick={() => handleEpisodeClick(episodeNumber)}\n                    >\n                      <Link to={`/player/${anime.id}/${episodeNumber}`} className=\"block\">\n                        <div className=\"flex items-center space-x-4\">\n                          <div className={`w-14 h-14 rounded-full flex items-center justify-center flex-shrink-0 ${\n                            selectedEpisode === episodeNumber\n                              ? 'bg-teal-500 text-white shadow-lg'\n                              : episodeNumber <= watchProgress\n                              ? 'bg-green-500 text-white shadow-md'\n                              : 'bg-gray-100 text-gray-600'\n                          }`}>\n                            <i className=\"ri-play-fill text-xl\"></i>\n                          </div>\n                          <div className=\"flex-1 min-w-0\">\n                            <div className=\"flex items-center justify-between mb-1\">\n                              <h4 className=\"font-bold text-lg text-gray-800 truncate\">\n                                Episode {episodeNumber}\n                              </h4>\n                              {episodeNumber <= watchProgress && (\n                                <div className=\"w-6 h-6 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0\">\n                                  <i className=\"ri-check-line text-white text-sm\"></i>\n                                </div>\n                              )}\n                            </div>\n                            <p className=\"text-sm text-gray-600 truncate\">\n                              {episodeTitle}\n                            </p>\n                            {episodeDuration && (\n                              <p className=\"text-xs text-gray-500 mt-1\">\n                                {Math.floor(episodeDuration / 60)}:{(episodeDuration % 60).toString().padStart(2, '0')}\n                              </p>\n                            )}\n                          </div>\n                        </div>\n                      </Link>\n                    </motion.div>\n                  );\n                })}\n              </div>\n            </div>\n          </motion.section>\n          </ErrorBoundary>\n\n          {/* Trailer Section */}\n          <ErrorBoundary fallback={<SectionError title=\"Trailer Error\" message=\"Couldn't load trailer. Please try again.\" />}>\n            <Suspense fallback={<div className=\"h-64 bg-gray-200 rounded-lg animate-pulse\"></div>}>\n              <LazyTrailerSection \n                trailerUrl={anime.trailer_url} \n                title={anime.title} \n              />\n            </Suspense>\n          </ErrorBoundary>\n\n          {/* Related Anime & Seasons */}\n          <ErrorBoundary fallback={<SectionError title=\"Related Anime Error\" message=\"Couldn't load related anime. Please try again.\" />}>\n            <Suspense fallback={<div className=\"h-96 bg-gray-200 rounded-lg animate-pulse\"></div>}>\n              <LazyRelatedAnime \n                animeId={anime.id} \n                currentTitle={anime.title} \n                currentGenres={anime.genres || []} \n              />\n            </Suspense>\n          </ErrorBoundary>\n\n          {/* Characters Section */}\n          <ErrorBoundary fallback={<SectionError title=\"Characters Error\" message=\"Couldn't load character information. Please try again.\" />}>\n            <Suspense fallback={<div className=\"h-64 bg-gray-200 rounded-lg animate-pulse\"></div>}>\n              <LazyAnimeCharacters animeId={anime.id} />\n            </Suspense>\n          </ErrorBoundary>\n          <motion.section\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.8 }}\n            className=\"mb-16\"\n          >\n            <h2 className=\"text-2xl md:text-3xl font-bold text-teal-800 mb-8 flex items-center\">\n              <i className=\"ri-heart-line mr-3 text-pink-500\"></i>\n              You Might Also Like\n            </h2>\n            \n            <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-4 md:gap-6\">\n              {similarAnime.map((similarAnimeItem: any, index: number) => {\n                // Map database anime structure to AnimeCard expected structure\n                const mappedAnime = {\n                  _id: similarAnimeItem.id,\n                  title: similarAnimeItem.title,\n                  cover: similarAnimeItem.poster_url || \"https://readdy.ai/api/search-image?query=Anime%20poster%2C%20default%20anime%20image&width=300&height=400&seq=anime-poster&orientation=portrait\",\n                  banner: similarAnimeItem.banner_url,\n                  rating: similarAnimeItem.rating || 0,\n                  year: similarAnimeItem.year || new Date().getFullYear(),\n                  totalEpisodes: similarAnimeItem.total_episodes || 1,\n                  currentEpisode: 0,\n                  genres: similarAnimeItem.genres || [],\n                  status: similarAnimeItem.status === 'ongoing' ? 'Ongoing' : \n                          similarAnimeItem.status === 'completed' ? 'Completed' : \n                          similarAnimeItem.status === 'upcoming' ? 'Upcoming' : 'Ongoing' as 'Ongoing' | 'Completed' | 'Upcoming',\n                  description: similarAnimeItem.description || '',\n                  type: similarAnimeItem.type === 'tv' ? 'TV' :\n                        similarAnimeItem.type === 'movie' ? 'Movie' :\n                        similarAnimeItem.type === 'ova' ? 'OVA' :\n                        similarAnimeItem.type === 'special' ? 'Special' : 'TV' as 'TV' | 'Movie' | 'OVA' | 'ONA' | 'Special',\n                  studios: similarAnimeItem.studios || [],\n                  popularity: 0,\n                  views: 0\n                };\n                \n                return (\n                  <motion.div\n                    key={similarAnimeItem.id}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.5, delay: 0.1 * index }}\n                  >\n                    <AnimeCard {...mappedAnime} />\n                  </motion.div>\n                );\n              })}\n            </div>\n          </motion.section>\n        </div>\n      </main>\n\n      {/* Footer */}\n      <footer className=\"bg-teal-800 text-white py-16 mt-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            <div>\n              <h3 className=\"text-xl font-bold mb-4\" style={{ fontFamily: '\"Pacifico\", serif' }}>\n                AnimeStream\n              </h3>\n              <p className=\"text-teal-200 leading-relaxed\">\n                Your magical gateway to the world of anime. Discover, watch, and fall in love with stories that inspire.\n              </p>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Browse</h4>\n              <ul className=\"space-y-3 text-teal-200\">\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">Popular</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">Trending</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">New Releases</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">Top Rated</a></li>\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Genres</h4>\n              <ul className=\"space-y-3 text-teal-200\">\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">Action</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">Romance</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">Fantasy</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors duration-200 cursor-pointer\">Comedy</a></li>\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-4\">Connect</h4>\n              <div className=\"flex space-x-4\">\n                <a href=\"#\" className=\"text-teal-200 hover:text-white transition-colors duration-200 cursor-pointer\">\n                  <i className=\"ri-twitter-fill text-xl\"></i>\n                </a>\n                <a href=\"#\" className=\"text-teal-200 hover:text-white transition-colors duration-200 cursor-pointer\">\n                  <i className=\"ri-facebook-fill text-xl\"></i>\n                </a>\n                <a href=\"#\" className=\"text-teal-200 hover:text-white transition-colors duration-200 cursor-pointer\">\n                  <i className=\"ri-instagram-fill text-xl\"></i>\n                </a>\n                <a href=\"#\" className=\"text-teal-200 hover:text-white transition-colors duration-200 cursor-pointer\">\n                  <i className=\"ri-discord-fill text-xl\"></i>\n                </a>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"border-t border-teal-700 mt-12 pt-8 text-center text-teal-200\">\n            <p>&copy; 2024 AnimeStream. All rights reserved. | \n              <a href=\"https://readdy.ai/?origin=logo\" className=\"hover:text-white transition-colors duration-200 ml-1 cursor-pointer\">\n                Powered by Readdy\n              </a>\n            </p>\n          </div>\n        </div>\n      </footer>\n\n      {/* Toast Notification */}\n      {showToast && (\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0, y: 50 }}\n          className=\"fixed bottom-6 right-6 bg-teal-600 text-white px-8 py-4 rounded-xl shadow-2xl z-50 flex items-center gap-3 backdrop-blur-sm\"\n        >\n          <i className=\"ri-check-line text-lg\"></i>\n          <span className=\"font-medium\">{showToast}</span>\n        </motion.div>\n      )}\n    </div>\n  );\n}\n"],"file":"page-BBAa_msx.js"}